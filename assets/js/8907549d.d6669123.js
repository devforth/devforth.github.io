"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[197],{6557:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=r(4848),t=r(8453);const s={},i="Custom record field rendering",c={id:"tutorial/Customization/customFieldRendering",title:"Custom record field rendering",description:"Customizing how AdminForth renders the cells with record values",source:"@site/docs/tutorial/03-Customization/01-customFieldRendering.md",sourceDirName:"tutorial/03-Customization",slug:"/tutorial/Customization/customFieldRendering",permalink:"/docs/tutorial/Customization/customFieldRendering",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Branding and Theming",permalink:"/docs/tutorial/Customization/branding"},next:{title:"Virtual columns",permalink:"/docs/tutorial/Customization/virtualColumns"}},d={},l=[{value:"Customizing how AdminForth renders the cells with record values",id:"customizing-how-adminforth-renders-the-cells-with-record-values",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"custom-record-field-rendering",children:"Custom record field rendering"}),"\n",(0,o.jsx)(n.h2,{id:"customizing-how-adminforth-renders-the-cells-with-record-values",children:"Customizing how AdminForth renders the cells with record values"}),"\n",(0,o.jsxs)(n.p,{children:["Let's change how AdminForth renders the number of rooms in the 'list' and 'show' views.\nWe will render '\ud83d\udfe8' for each room and then we will print ",(0,o.jsx)(n.code,{children:"square_meter"})," at the same cells."]}),"\n",(0,o.jsxs)(n.p,{children:["Create directory ",(0,o.jsx)(n.code,{children:"custom"}),". Create a file ",(0,o.jsx)(n.code,{children:"RoomsCell.vue"})," in it:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-vue",children:'<template>\n  <div class="flex items-center">\n    <span v-for="room in record.number_of_rooms">\n      \ud83d\udfe8\n    </span>\n      \n    {{ record.square_meter }} m\xb2\n  </div>\n</template>\n\n<script setup>\n    defineProps({\n    record: Object\n});\n<\/script>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Now you can use this component in the configuration of the resource:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"{\n  ...\n  resourceId: 'apparts',\n  ...\n  columns: [\n    ...\n    {\n      ...\n      name: 'number_of_rooms',\n      ...\n      components: {\n        show: '@@/RoomsCell.vue',\n        list: '@@/RoomsCell.vue',\n      }\n    },\n    ...\n  ],\n  ...\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In very similar way you can render how cell is rendered in ",(0,o.jsx)(n.code,{children:"'edit'"})," and ",(0,o.jsx)(n.code,{children:"'create'"})," view.\nYou can use it for creating custom editors for the fields. Check ",(0,o.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminForthFieldComponents#create",children:"component specs"})," to understand which props are passed to the component"]}),"\n",(0,o.jsx)(n.h1,{id:"parametrizing-the-custom-components",children:"Parametrizing the custom components"}),"\n",(0,o.jsxs)(n.p,{children:["Sometimes you need to render same component with different parameters.\nYou can use ",(0,o.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminForthComponentDeclarationFull",children:"full component declaration"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"{\n  ...\n  resourceId: 'apparts',\n  ...\n  columns: [\n    ...\n    {\n      ...\n      name: 'number_of_rooms',\n      ...\n      components: {\n        show: {\n          file: '@@/RoomsCell.vue',\n          meta: {\n            filler: '\ud83d\udfe8',\n          },\n        },\n        list: {\n          file: '@@/RoomsCell.vue',\n          meta: {\n            filler: '\ud83d\udfe6',\n          },\n        }\n      }\n    },\n    ...\n  ],\n  ...\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Now our component can read ",(0,o.jsx)(n.code,{children:"filler"})," from ",(0,o.jsx)(n.code,{children:"meta"})," prop:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-vue",children:'<template>\n  <div class="flex items-center">\n    <span v-for="room in record.number_of_rooms">\n      {{ meta.filler }}\n    </span>\n      \n    {{ room.square_meter }} m\xb2\n  </div>\n</template>\n\n<script setup>\ndefineProps({\n  record: Object,\n  meta: Object\n});\n<\/script>\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var o=r(6540);const t={},s=o.createContext(t);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);