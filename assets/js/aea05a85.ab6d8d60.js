"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[5401],{1270:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api/types/Back/interfaces/AdminForthInputConfig","title":"AdminForthInputConfig","description":"Main configuration object for AdminForth","source":"@site/docs/api/types/Back/interfaces/AdminForthInputConfig.md","sourceDirName":"api/types/Back/interfaces","slug":"/api/types/Back/interfaces/AdminForthInputConfig","permalink":"/docs/api/types/Back/interfaces/AdminForthInputConfig","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"AdminForthForeignResource","permalink":"/docs/api/types/Back/interfaces/AdminForthForeignResource"},"next":{"title":"AdminForthResource","permalink":"/docs/api/types/Back/interfaces/AdminForthResource"}}');var r=s(4848),o=s(8453);const l={},t="AdminForthInputConfig",d={},c=[{value:"Properties",id:"properties",level:2},{value:"auth?",id:"auth",level:3},{value:"beforeLoginConfirmation?",id:"beforeloginconfirmation",level:4},{value:"clientIpHeader?",id:"clientipheader",level:4},{value:"demoCredentials?",id:"democredentials",level:4},{value:"loginBackgroundImage?",id:"loginbackgroundimage",level:4},{value:"loginBackgroundPosition?",id:"loginbackgroundposition",level:4},{value:"loginPromptHTML?",id:"loginprompthtml",level:4},{value:"passwordHashField",id:"passwordhashfield",level:4},{value:"rememberMeDays?",id:"remembermedays",level:4},{value:"resourceId?",id:"resourceid",level:4},{value:"userFullNameField?",id:"userfullnamefield",level:4},{value:"usernameField",id:"usernamefield",level:4},{value:"usersResourceId?",id:"usersresourceid",level:4},{value:"websocketSubscribed()?",id:"websocketsubscribed",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"websocketTopicAuth()?",id:"websockettopicauth",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"baseUrl?",id:"baseurl",level:3},{value:"customization?",id:"customization",level:3},{value:"dataSources",id:"datasources",level:3},{value:"databaseConnectors?",id:"databaseconnectors",level:3},{value:"Index signature",id:"index-signature",level:4},{value:"menu",id:"menu",level:3},{value:"resources",id:"resources",level:3}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"adminforthinputconfig",children:"AdminForthInputConfig"})}),"\n",(0,r.jsx)(n.p,{children:"Main configuration object for AdminForth"}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"auth",children:"auth?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"auth"}),": ",(0,r.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Authorization module configuration"}),"\n",(0,r.jsx)(n.h4,{id:"beforeloginconfirmation",children:"beforeLoginConfirmation?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"beforeLoginConfirmation"}),": ",(0,r.jsx)(n.a,{href:"/docs/api/types/Back/type-aliases/BeforeLoginConfirmationFunction",children:(0,r.jsx)(n.code,{children:"BeforeLoginConfirmationFunction"})})," | ",(0,r.jsx)(n.a,{href:"/docs/api/types/Back/type-aliases/BeforeLoginConfirmationFunction",children:(0,r.jsx)(n.code,{children:"BeforeLoginConfirmationFunction"})}),"[]"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Function or functions  which will be called before user try to login.\nEach function will resive User object as an argument"}),"\n",(0,r.jsx)(n.h4,{id:"clientipheader",children:"clientIpHeader?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"clientIpHeader"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Client IP header name. If set, AdminForth will use this header to get client IP address.\nOtherwise it will use first IP address from X-Forwarded-For header.\nIf you are using Cloudflare, set this to 'CF-Connecting-IP'. Case-insensitive."}),"\n",(0,r.jsx)(n.h4,{id:"democredentials",children:"demoCredentials?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"demoCredentials"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Pair of login and pass substitution for demo mode. Split by ':'\n! This option is for demo purposes only, never use it for your projects"}),"\n",(0,r.jsx)(n.h4,{id:"loginbackgroundimage",children:"loginBackgroundImage?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"loginBackgroundImage"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["File path to custom background image for login page\nExample:\nPlace file ",(0,r.jsx)(n.code,{children:"login-background.jpg"})," to ",(0,r.jsx)(n.code,{children:"./custom"})," folder and set this option:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"loginBackgroundImage: '@@/login-background.jpg',\n"})}),"\n",(0,r.jsx)(n.h4,{id:"loginbackgroundposition",children:"loginBackgroundPosition?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"loginBackgroundPosition"}),": ",(0,r.jsx)(n.code,{children:'"over"'})," | ",(0,r.jsx)(n.code,{children:'"1/2"'})," | ",(0,r.jsx)(n.code,{children:'"1/3"'})," | ",(0,r.jsx)(n.code,{children:'"2/3"'})," | ",(0,r.jsx)(n.code,{children:'"3/4"'})," | ",(0,r.jsx)(n.code,{children:'"2/5"'})," | ",(0,r.jsx)(n.code,{children:'"3/5"'})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Position of background image on login page\n'over' - image will be displayed over full login page under login form\n'1/2' - image will be displayed on left 1/2 of login page"}),"\n",(0,r.jsx)(n.p,{children:"Default: '1/2'"}),"\n",(0,r.jsx)(n.h4,{id:"loginprompthtml",children:"loginPromptHTML?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"loginPromptHTML"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Any prompt to show users on login. Supports HTML."}),"\n",(0,r.jsx)(n.h4,{id:"passwordhashfield",children:"passwordHashField"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"passwordHashField"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Field name (column name) in user resource which will be used to get hash of password.\nCan be e.g. 'passwordHash'"}),"\n",(0,r.jsx)(n.h4,{id:"remembermedays",children:"rememberMeDays?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"rememberMeDays"}),": ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Remember me days for "Remember Me" checkbox on login page.\nIf not set or set to null/0/undefined, "Remember Me" checkbox will not be displayed.\nIf rememberMeDays is set, then users who check "Remember Me" will be staying logged in for this amount of days.'}),"\n",(0,r.jsx)(n.h4,{id:"resourceid",children:"resourceId?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"resourceId"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Legacy field left for backward compatibility. Use usersResourceId instead."}),"\n",(0,r.jsx)(n.h4,{id:"userfullnamefield",children:"userFullNameField?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"userFullNameField"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Optionally if your users table has a field(column) with full name, you can set it here.\nThis field will be used to display user name in the top right corner of the admin panel."}),"\n",(0,r.jsx)(n.h4,{id:"usernamefield",children:"usernameField"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"usernameField"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Field name (column name) in user resource which will be used as username for searching user in database during login.\nCan be e.g. 'email' or 'username'"}),"\n",(0,r.jsx)(n.h4,{id:"usersresourceid",children:"usersResourceId?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"usersResourceId"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Resource ID for resource which stores user table.\nResource is a table in database where users will be stored and fetched from. Resources and their ids are defined in resources section of the config.\nIn other words this setting is a reference to a table in database where users will be fetched from on login."}),"\n",(0,r.jsx)(n.h4,{id:"websocketsubscribed",children:"websocketSubscribed()?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"websocketSubscribed"}),": (",(0,r.jsx)(n.code,{children:"topic"}),", ",(0,r.jsx)(n.code,{children:"user"}),") => ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"callback which will be called after user subscribes to websocket topic"}),"\n",(0,r.jsx)(n.h5,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"topic"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"topic on which user subscribed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"user"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.a,{href:"/docs/api/types/Common/interfaces/AdminUser",children:(0,r.jsx)(n.code,{children:"AdminUser"})})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"user object"})]})]})]}),"\n",(0,r.jsx)(n.h5,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"websockettopicauth",children:"websocketTopicAuth()?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"websocketTopicAuth"}),": (",(0,r.jsx)(n.code,{children:"topic"}),", ",(0,r.jsx)(n.code,{children:"user"}),") => ",(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Can be used to limit user access when subscribing from frontend to websocket topics."}),"\n",(0,r.jsx)(n.h5,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"topic"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"topic where user is trying to subscribe"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"user"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.a,{href:"/docs/api/types/Common/interfaces/AdminUser",children:(0,r.jsx)(n.code,{children:"AdminUser"})})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"user object"})]})]})]}),"\n",(0,r.jsx)(n.h5,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise"}),"<",(0,r.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"baseurl",children:"baseUrl?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"baseUrl"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you want to Serve AdminForth from a subdirectory, e.g. on example.com/backoffice, you can specify it like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"baseUrl: '/backoffice',\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"customization",children:"customization?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"customization"}),": ",(0,r.jsx)(n.code,{children:"AdminForthInputConfigCustomization"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Settings which allow you to customize AdminForth"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"datasources",children:"dataSources"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"dataSources"}),": ",(0,r.jsx)(n.a,{href:"/docs/api/types/Back/type-aliases/AdminForthDataSource",children:(0,r.jsx)(n.code,{children:"AdminForthDataSource"})}),"[]"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"List of data sources which will be used to fetch data for resources.\nDatasource is one database connection"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"databaseconnectors",children:"databaseConnectors?"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"optional"})," ",(0,r.jsx)(n.strong,{children:"databaseConnectors"}),": ",(0,r.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you want use custom DataSource which is not supported by AdminForth yet, you can define it's class here"}),"\n",(0,r.jsx)(n.h4,{id:"index-signature",children:"Index signature"}),"\n",(0,r.jsxs)(n.p,{children:["[",(0,r.jsx)(n.code,{children:"key"}),": ",(0,r.jsx)(n.code,{children:"string"}),"]: ",(0,r.jsx)(n.a,{href:"/docs/api/types/Back/interfaces/IAdminForthDataSourceConnectorConstructor",children:(0,r.jsx)(n.code,{children:"IAdminForthDataSourceConnectorConstructor"})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"menu",children:"menu"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"menu"}),": ",(0,r.jsx)(n.a,{href:"/docs/api/types/Common/interfaces/AdminForthConfigMenuItem",children:(0,r.jsx)(n.code,{children:"AdminForthConfigMenuItem"})}),"[]"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Array of left sidebar menu items which will be displayed in the admin panel.\nMenu items can be links to resources or custom pages.\nMenu items can be grouped."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"resources",children:"resources"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"resources"}),": ",(0,r.jsx)(n.a,{href:"/docs/api/types/Back/interfaces/AdminForthResourceInput",children:(0,r.jsx)(n.code,{children:"AdminForthResourceInput"})}),"[]"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Array of resources which will be displayed in the admin panel.\nResource represents one table or collection in database.\nEach resource has its own configuration."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(6540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);