"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[4346],{3587:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"tutorial/Customization/customFieldRendering","title":"Custom record field rendering","description":"Customizing how AdminForth renders the cells with record values","source":"@site/docs/tutorial/03-Customization/02-customFieldRendering.md","sourceDirName":"tutorial/03-Customization","slug":"/tutorial/Customization/customFieldRendering","permalink":"/docs/tutorial/Customization/customFieldRendering","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Branding and Theming","permalink":"/docs/tutorial/Customization/branding"},"next":{"title":"Virtual columns","permalink":"/docs/tutorial/Customization/virtualColumns"}}');var s=r(4848),o=r(8453);const i={},d="Custom record field rendering",a={},l=[{value:"Customizing how AdminForth renders the cells with record values",id:"customizing-how-adminforth-renders-the-cells-with-record-values",level:2},{value:"Parametrize the custom components",id:"parametrize-the-custom-components",level:2},{value:"Using 3rd-party npm packages in the Vue components",id:"using-3rd-party-npm-packages-in-the-vue-components",level:2},{value:"Editing values component",id:"editing-values-component",level:2},{value:"Pre-made renderers",id:"pre-made-renderers",level:2},{value:"CompactUUID",id:"compactuuid",level:3},{value:"Country Flag",id:"country-flag",level:3},{value:"Human Number",id:"human-number",level:3},{value:"URL",id:"url",level:3},{value:"Relative Time",id:"relative-time",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"custom-record-field-rendering",children:"Custom record field rendering"})}),"\n",(0,s.jsx)(n.h2,{id:"customizing-how-adminforth-renders-the-cells-with-record-values",children:"Customizing how AdminForth renders the cells with record values"}),"\n",(0,s.jsxs)(n.p,{children:["Let's change how AdminForth renders the number of rooms in the 'list' and 'show' views.\nWe will render '\ud83d\udfe8' for each room and then we will print ",(0,s.jsx)(n.code,{children:"square_meter"})," at the same cells."]}),"\n",(0,s.jsxs)(n.p,{children:["Create directory ",(0,s.jsx)(n.code,{children:"custom"}),". Create a file ",(0,s.jsx)(n.code,{children:"RoomsCell.vue"})," in it:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",metastring:"title='./custom/RoomsCell.vue'",children:'<template>\n  <div class="flex items-center">\n    <span v-for="room in record.number_of_rooms">\n      \ud83d\udfe8\n    </span>\n      \n    {{ record.square_meter }} m\xb2\n  </div>\n</template>\n\n<script setup lang="ts">\nimport type { AdminForthResourceColumnCommon, AdminForthResourceCommon, AdminUser } from \'@/types/Common\';\n\nconst props = defineProps<{\n    column: AdminForthResourceColumnCommon;\n    record: any;\n    meta: any;\n    resource: AdminForthResourceCommon;\n    adminUser: AdminUser\n}>();\n<\/script>\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now you can use this component in the configuration of the resource:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/apartments.ts'",children:"{\n  ...\n  resourceId: 'aparts',\n  columns: [\n    ...\n    {\n      ...\n      name: 'number_of_rooms',\n//diff-add\n      components: {\n//diff-add\n        show: '@@/RoomsCell.vue',\n//diff-add\n        list: '@@/RoomsCell.vue',\n//diff-add\n      }\n    },\n    ...\n  ],\n  ...\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Here is how it looks:\n",(0,s.jsx)(n.img,{alt:"alt text",src:r(6598).A+"",width:"3700",height:"2044"})]}),"\n",(0,s.jsxs)(n.p,{children:["In very similar way you can render how cell is rendered in ",(0,s.jsx)(n.code,{children:"'edit'"})," and ",(0,s.jsx)(n.code,{children:"'create'"})," view.\nYou can use it for creating custom editors for the fields. Check ",(0,s.jsx)(n.a,{href:"/docs/api/Common/interfaces/AdminForthFieldComponents#create",children:"component specs"})," to understand which props are passed to the component"]}),"\n",(0,s.jsx)(n.h2,{id:"parametrize-the-custom-components",children:"Parametrize the custom components"}),"\n",(0,s.jsxs)(n.p,{children:["Sometimes you need to render same component with different parameters.\nYou can use ",(0,s.jsx)(n.a,{href:"/docs/api/Common/interfaces/AdminForthComponentDeclarationFull",children:"full component declaration"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/apartments.ts'",children:"\n{\n  ...\n  resourceId: 'aparts',\n  columns: [\n    ...\n    {\n      ...\n      name: 'number_of_rooms',\n      components: {\n//diff-remove\n       show: '@@/RoomsCell.vue',\n//diff-add\n       show: {\n//diff-add\n         file: '@@/RoomsCell.vue',\n//diff-add\n         meta: {\n//diff-add\n           filler: '\ud83d\udfe8',\n//diff-add\n         },\n//diff-add\n       },\n//diff-remove\n       list: '@@/RoomsCell.vue',\n//diff-add\n       list: {\n//diff-add\n         file: '@@/RoomsCell.vue',\n//diff-add\n         meta: {\n//diff-add\n           filler: '\ud83d\udfe6',\n//diff-add\n          },\n//diff-add\n        }\n      }\n    },\n    ...\n  ],\n  ...\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now our component can read ",(0,s.jsx)(n.code,{children:"filler"})," from ",(0,s.jsx)(n.code,{children:"meta"})," prop:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./custom/RoomsCell.vue'",children:'<template>\n  <div class="flex items-center">\n    <span v-for="room in record.number_of_rooms">\n//diff-remove\n     \ud83d\udfe8\n//diff-add\n    {{ meta.filler }}\n    </span>\n    {{ room.square_meter }} m\xb2\n  </div>\n</template>\n\n<script setup lang="ts">\nimport type { AdminForthResourceColumnCommon, AdminForthResourceCommon, AdminUser } from \'@/types/Common\';\n\nconst props = defineProps<{\n    column: AdminForthResourceColumnCommon;\n    record: any;\n    meta: any;\n    resource: AdminForthResourceCommon;\n    adminUser: AdminUser\n}>();\n<\/script>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"using-3rd-party-npm-packages-in-the-vue-components",children:"Using 3rd-party npm packages in the Vue components"}),"\n",(0,s.jsxs)(n.p,{children:["To install 3rd-party npm packages you should create npm package in the ",(0,s.jsx)(n.code,{children:"custom"})," directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd custom\n"})}),"\n",(0,s.jsxs)(n.p,{children:["And simply do ",(0,s.jsx)(n.code,{children:"npm install"})," for the package you need:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm i <some package> -D\n"})}),"\n",(0,s.jsx)(n.h2,{id:"editing-values-component",children:"Editing values component"}),"\n",(0,s.jsxs)(n.p,{children:["In same way as we define ",(0,s.jsx)(n.code,{children:"show"})," and list component, we can create component for edit/create page.\nLet's create custom dropdown for ",(0,s.jsx)(n.code,{children:"country"})," field which will show emoji flags of the countries."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",metastring:"title='./custom/CountryDropdown.vue'",children:'<template>\n  <Select\n      class="w-full"\n      :options="column.enum"\n      :model-value="record[column.name]"\n      @update:model-value="emit(\'update:value\', $event)"\n  >\n    <template #item="{option}">\n      <span class="text-xl inline-flex">{{ getCountryFlag(option.value) }}</span> {{ option.label }}\n    </template>\n\n    <template #selected-item="{option}">\n      <span class="text-xl inline-flex">{{ getCountryFlag(option.value) }}</span> {{ option.label }}\n    </template>\n  </Select>\n</template>\n\n<script setup lang="ts">\nimport Select from "@/afcl/Select.vue";\nimport type {\n  AdminForthResourceColumnCommon,\n  AdminForthResourceCommon,\n  AdminUser,\n} from "@/types/Common";\n\nconst props = defineProps<{\n  column: AdminForthResourceColumnCommon;\n  record: any;\n  meta: any;\n  resource: AdminForthResourceCommon;\n  adminUser: AdminUser;\n}>();\n\nconst emit = defineEmits(["update:value"]);\n\nfunction getCountryFlag(countryCode: string) {\n  return countryCode?.toUpperCase()\n    .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397));\n}\n\n<\/script>\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now you can use this component in the configuration of the resource:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/apartments.ts'",children:"{\n  ...\n  resourceId: 'aparts',\n  columns: [\n    ...\n    {\n      name: 'country',\n      components: {\n//diff-add\n        edit: '@@/CountryDropdown.vue',\n//diff-add\n        create: '@@/CountryDropdown.vue',\n      },\n      ...\n    },\n    ...\n  ],\n  ...\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"pre-made-renderers",children:"Pre-made renderers"}),"\n",(0,s.jsx)(n.p,{children:"Though creating custom renderers is super-easy, we have couple of pre-made renderers for you to use."}),"\n",(0,s.jsx)(n.h3,{id:"compactuuid",children:"CompactUUID"}),"\n",(0,s.jsxs)(n.p,{children:["If you have a UUID column which you want display in table in more compact manner, you can use ",(0,s.jsx)(n.code,{children:"CompactUUID"})," renderer."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/apartments.ts'",children:"//diff-add\nimport { randomUUID } from 'crypto';\n\n  ...\n  columns: [\n    { \n      name: 'id', \n      primaryKey: true,\n      showIn: {\n//diff-remove\n        list: false,\n        edit: false,\n        create: false,\n      },\n//diff-remove\n      fillOnCreate: ({ initialRecord, adminUser }) => Math.random().toString(36).substring(7),\n//diff-add\n      fillOnCreate: ({initialRecord}: any) => randomUUID(),\n//diff-add\n      components: {\n//diff-add\n        list: '@/renderers/CompactUUID.vue'\n//diff-add\n      }\n    }\n  ...\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:r(8467).A+"",width:"3700",height:"2348"})}),"\n",(0,s.jsx)(n.h3,{id:"country-flag",children:"Country Flag"}),"\n",(0,s.jsx)(n.p,{children:"Renders string fields containing ISO-3166-1 alpha-2 country codes as flags (e.g. 'US', 'DE', 'FR', etc.)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/apartments.ts'",children:"  columns: [\n    ...\n    {\n      name: 'country',\n  //diff-add\n      components: {\n  //diff-add\n        list: '@/renderers/CountryFlag.vue'\n  //diff-add\n      },\n      ...\n    }\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:r(1387).A+"",width:"3700",height:"2348"})}),"\n",(0,s.jsx)(n.p,{children:"You can also show country name after the flag:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/apartments.ts'",children:"  columns: [\n    ...\n    {\n      name: 'country',\n  //diff-add\n      components: {\n  //diff-add\n        list: {\n  //diff-add\n          file: '@/renderers/CountryFlag.vue',\n  //diff-add\n          meta: {\n  //diff-add\n            showCountryName: true\n  //diff-add\n          }\n  //diff-add\n        }\n  //diff-add\n      },\n      ...\n    }\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:r(7056).A+"",width:"3700",height:"2348"})}),"\n",(0,s.jsx)(n.h3,{id:"human-number",children:"Human Number"}),"\n",(0,s.jsx)(n.p,{children:"It formats large numbers into a human-readable format (e.g., 10k, 1.5M) and supports localization for different number formats."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/apartments.ts'",children:"  columns: [\n    ...\n    { \n      name: 'square_meter', \n      label: 'Square', \n      minValue: 1,  // you can set min /max value for number fields\n      maxValue: 100000000,\n      //diff-add\n      components: {\n      //diff-add\n        list: {\n      //diff-add\n          file: '@/renderers/HumanNumber.vue',\n      //diff-add\n        }\n      //diff-add\n      }\n    },\n    {\n    ...\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"alt text",src:r(4674).A+"",width:"438",height:"321"})}),"\n",(0,s.jsx)(n.h3,{id:"url",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:["If your field has absolute URLs as text strings you can use ",(0,s.jsx)(n.code,{children:"URLs"})," renderer to render them as clickable links."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/anyResource.ts'",children:"  columns: [\n    ...\n    {\n      name: 'url',\n  //diff-add\n      components: {\n  //diff-add\n        list: '@/renderers/URL.vue'\n  //diff-add\n      },\n    ...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"relative-time",children:"Relative Time"}),"\n",(0,s.jsx)(n.p,{children:"To format your date fields to display the elapsed time, you can utilize the RelativeTime renderer."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title='./resources/anyResource.ts'",children:"  columns: [\n    ...\n    {\n      name: 'created_at',\n  //diff-add\n      components: {\n  //diff-add\n        list: '@/renderers/RelativeTime.vue'\n  //diff-add\n      },\n    ...\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},6598:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/Custom record field rendering-b2ecaebfe6c1e037ecb311cd853dadde.png"},7056:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/Group 12 (1)-2b0124d7267e86fbd94cca307b19ba97.jpg"},1387:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/Group 13-4f361e046d003307dae13f8277178a6c.png"},8467:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/Group 8-c9e687ed354d2a6d771b4c9240e4ef67.jpg"},4674:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/HumanNumber-ed37218caa516970fcab34dc133dd21f.png"},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var t=r(6540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);