"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[9996],{7276:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var n=i(4848),a=i(8453);const o={},r=void 0,s={id:"tutorial/Plugins/AuditLog",title:"AuditLog",description:"AuditLog plugin allows to limit access to the resource actions (list, show, create, update, delete) based on custom callback.",source:"@site/docs/tutorial/Plugins/AuditLog.md",sourceDirName:"tutorial/Plugins",slug:"/tutorial/Plugins/AuditLog",permalink:"/docs/tutorial/Plugins/AuditLog",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deploy in Docker",permalink:"/docs/tutorial/deploy"},next:{title:"ForeignInlineList",permalink:"/docs/tutorial/Plugins/ForeignInlineList"}},l={},d=[{value:"Installation",id:"installation",level:2},{value:"Creating table for storing activity data",id:"creating-table-for-storing-activity-data",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["AuditLog plugin allows to limit access to the resource actions (list, show, create, update, delete) based on custom callback.\nCallback accepts ",(0,n.jsx)(t.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminUser/",children:"AdminUser"})," which you can use to define access rules."]}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.p,{children:"Plugin is already installed into adminforth, to import:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"import AuditLogPlugin from 'adminforth/plugins/AuditLogPlugin';\n"})}),"\n",(0,n.jsx)(t.p,{children:"If yu are using pure Node without TypeScript, you can use the following code:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"import AuditLogPlugin from 'adminforth/dist/plugins/AuditLogPlugin/index.ts';\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/docs/tutorial/gettingStarted",children:"Getting Started"})," will be used as base for this example."]}),"\n",(0,n.jsx)(t.h2,{id:"creating-table-for-storing-activity-data",children:"Creating table for storing activity data"}),"\n",(0,n.jsx)(t.p,{children:"For the first, to track records changes, we need to set up the database and table with certain fields inside."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:'CREATE TABLE audit_logs(\n    id uuid NOT NULL,  -- identifier of applied change record \n    created_at timestamp without time zone, -- timestamp of applied change\n    resource_id varchar(255), -- identifier of resource where change were applied\n    user_id uuid, -- identifier of user who made the changes\n    "action" varchar(255), -- type of change (create, edit, delete)\n    diff text, -- delta betwen before/after versions\n    record_id varchar, -- identifier of record that been changed\n    PRIMARY KEY(id)\n);\n'})}),"\n",(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/docs/api/plugins/AuditLogPlugin/types/type-aliases/PluginOptions",children:"API Reference"})," for more all options."]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>s});var n=i(6540);const a={},o=n.createContext(a);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);