"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[5585],{8408:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/types/Back/type-aliases/AdminForthDataSource","title":"AdminForthDataSource","description":"AdminForthDataSource: object","source":"@site/docs/api/types/Back/type-aliases/AdminForthDataSource.md","sourceDirName":"api/types/Back/type-aliases","slug":"/api/types/Back/type-aliases/AdminForthDataSource","permalink":"/docs/api/types/Back/type-aliases/AdminForthDataSource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"ResourceOptionsInput","permalink":"/docs/api/types/Back/interfaces/ResourceOptionsInput"},"next":{"title":"AfterCreateSaveFunction","permalink":"/docs/api/types/Back/type-aliases/AfterCreateSaveFunction"}}');var r=n(4848),o=n(8453);const a={},i="AdminForthDataSource",c={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"id",id:"id",level:3},{value:"url",id:"url",level:3}];function l(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"adminforthdatasource",children:"AdminForthDataSource"})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"AdminForthDataSource"}),": ",(0,r.jsx)(t.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Data source describes database connection which will be used to fetch data for resources.\nEach resource should use one data source."}),"\n",(0,r.jsx)(t.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,r.jsx)(t.h3,{id:"id",children:"id"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"id"}),": ",(0,r.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"ID of datasource which you will use in resources to specify from which database to fetch data from"}),"\n",(0,r.jsx)(t.h3,{id:"url",children:"url"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"url"}),": ",(0,r.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"URL to database. Examples:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["MongoDB: ",(0,r.jsx)(t.code,{children:"mongodb://<user>:<password>@<host>:<port>/<database>"})]}),"\n",(0,r.jsxs)(t.li,{children:["PostgreSQL: ",(0,r.jsx)(t.code,{children:"postgresql://<user>:<password>@<host>:<port>/<database>"})]}),"\n",(0,r.jsxs)(t.li,{children:["SQLite: ",(0,r.jsx)(t.code,{children:"sqlite://<path>"})]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(6540);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);