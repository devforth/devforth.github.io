"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[3176],{7951:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>t});const n=JSON.parse('{"id":"api/types/Back/interfaces/AdminForthResource","title":"AdminForthResource","description":"Resource describes one table or collection in database.","source":"@site/docs/api/types/Back/interfaces/AdminForthResource.md","sourceDirName":"api/types/Back/interfaces","slug":"/api/types/Back/interfaces/AdminForthResource","permalink":"/docs/api/types/Back/interfaces/AdminForthResource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"AdminForthInputConfig","permalink":"/docs/api/types/Back/interfaces/AdminForthInputConfig"},"next":{"title":"AdminForthResourceColumn","permalink":"/docs/api/types/Back/interfaces/AdminForthResourceColumn"}}');var i=r(4848),d=r(8453);const l={},c="AdminForthResource",o={},t=[{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"columns",id:"columns",level:3},{value:"Overrides",id:"overrides",level:4},{value:"dataSource",id:"datasource",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"dataSourceColumns",id:"datasourcecolumns",level:3},{value:"Overrides",id:"overrides-1",level:4},{value:"hooks?",id:"hooks",level:3},{value:"create?",id:"create",level:4},{value:"create.afterSave?",id:"createaftersave",level:4},{value:"create.beforeSave?",id:"createbeforesave",level:4},{value:"delete?",id:"delete",level:4},{value:"delete.afterSave?",id:"deleteaftersave",level:4},{value:"delete.beforeSave?",id:"deletebeforesave",level:4},{value:"edit?",id:"edit",level:4},{value:"edit.afterSave?",id:"editaftersave",level:4},{value:"edit.beforeSave?",id:"editbeforesave",level:4},{value:"list?",id:"list",level:4},{value:"list.afterDatasourceResponse?",id:"listafterdatasourceresponse",level:4},{value:"list.beforeDatasourceRequest?",id:"listbeforedatasourcerequest",level:4},{value:"show?",id:"show",level:4},{value:"show.afterDatasourceResponse?",id:"showafterdatasourceresponse",level:4},{value:"show.beforeDatasourceRequest?",id:"showbeforedatasourcerequest",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"label",id:"label",level:3},{value:"Overrides",id:"overrides-3",level:4},{value:"options",id:"options",level:3},{value:"plugins?",id:"plugins",level:3},{value:"Overrides",id:"overrides-4",level:4},{value:"recordLabel()",id:"recordlabel",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"resourceId",id:"resourceid",level:3},{value:"Overrides",id:"overrides-6",level:4},{value:"table",id:"table",level:3},{value:"Inherited from",id:"inherited-from-1",level:4}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"adminforthresource",children:"AdminForthResource"})}),"\n",(0,i.jsx)(s.p,{children:"Resource describes one table or collection in database.\nAdminForth generates set of pages for 'list', 'show', 'edit', 'create', 'filter' operations for each resource."}),"\n",(0,i.jsx)(s.h2,{id:"extends",children:"Extends"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"Omit"})," <",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/interfaces/AdminForthResourceInput",children:(0,i.jsx)(s.code,{children:"AdminForthResourceInput"})}),", ",(0,i.jsx)(s.code,{children:'"options"'}),">"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"columns",children:"columns"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"columns"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/interfaces/AdminForthResourceColumn",children:(0,i.jsx)(s.code,{children:"AdminForthResourceColumn"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"overrides",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.columns"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"datasource",children:"dataSource"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"dataSource"}),": ",(0,i.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"ID of datasource which will be used to fetch data from."}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.dataSource"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"datasourcecolumns",children:"dataSourceColumns"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"dataSourceColumns"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/interfaces/AdminForthResourceColumn",children:(0,i.jsx)(s.code,{children:"AdminForthResourceColumn"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"overrides-1",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.dataSourceColumns"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"hooks",children:"hooks?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"hooks"}),": ",(0,i.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Hooks allow you to change the data on different stages of resource lifecycle.\nHooks are functions which will be called on backend side (only backend side)."}),"\n",(0,i.jsx)(s.h4,{id:"create",children:"create?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"create"}),": ",(0,i.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"createaftersave",children:"create.afterSave?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"afterSave"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/AfterCreateSaveFunction",children:(0,i.jsx)(s.code,{children:"AfterCreateSaveFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Initiate some trigger after record saved to database (e.g sync to another datasource)"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"createbeforesave",children:"create.beforeSave?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"beforeSave"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/BeforeCreateSaveFunction",children:(0,i.jsx)(s.code,{children:"BeforeCreateSaveFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Validate record before saving to database and interrupt execution if validation failed (",(0,i.jsx)(s.code,{children:"allowedActions.create"})," should be preferred in most cases)"]}),"\n",(0,i.jsx)(s.li,{children:"fill-in adminUser as creator of record"}),"\n",(0,i.jsx)(s.li,{children:"Attach additional data to record before saving to database (mostly fillOnCreate should be used instead)"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"delete",children:"delete?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"delete"}),": ",(0,i.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"deleteaftersave",children:"delete.afterSave?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"afterSave"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/BeforeDeleteSaveFunction",children:(0,i.jsx)(s.code,{children:"BeforeDeleteSaveFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Initiate some trigger after record deleted from database (e.g sync to another datasource)"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"deletebeforesave",children:"delete.beforeSave?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"beforeSave"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/BeforeDeleteSaveFunction",children:(0,i.jsx)(s.code,{children:"BeforeDeleteSaveFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Validate that record can be deleted and interrupt execution if validation failed (",(0,i.jsx)(s.code,{children:"allowedActions.delete"})," should be preferred in most cases)"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"edit",children:"edit?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"edit"}),": ",(0,i.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"editaftersave",children:"edit.afterSave?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"afterSave"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/AfterEditSaveFunction",children:(0,i.jsx)(s.code,{children:"AfterEditSaveFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Same as hooks.create.afterSave but for edit page"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"editbeforesave",children:"edit.beforeSave?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"beforeSave"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/BeforeEditSaveFunction",children:(0,i.jsx)(s.code,{children:"BeforeEditSaveFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Same as hooks.create.beforeSave but for edit page"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"list",children:"list?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"list"}),": ",(0,i.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"listafterdatasourceresponse",children:"list.afterDatasourceResponse?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"afterDatasourceResponse"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/AfterDataSourceResponseFunction",children:(0,i.jsx)(s.code,{children:"AfterDataSourceResponseFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Same as hooks.show.afterDatasourceResponse but applied for all records returned from database for\nshowing in list view, e.g. add new field to each record in list view"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"listbeforedatasourcerequest",children:"list.beforeDatasourceRequest?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"beforeDatasourceRequest"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/BeforeDataSourceRequestFunction",children:(0,i.jsx)(s.code,{children:"BeforeDataSourceRequestFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"add additional filters in addition to what user selected before fetching data from database."}),"\n",(0,i.jsx)(s.li,{children:"same as hooks.show.beforeDatasourceRequest"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"show",children:"show?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"show"}),": ",(0,i.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"showafterdatasourceresponse",children:"show.afterDatasourceResponse?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"afterDatasourceResponse"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/AfterDataSourceResponseFunction",children:(0,i.jsx)(s.code,{children:"AfterDataSourceResponseFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Transform value for some field for record returned from database before returning to frontend (minimize, sanitize, etc)"}),"\n",(0,i.jsxs)(s.li,{children:["If some-why you can't use ",(0,i.jsx)(s.code,{children:"backendOnly"})," you can cleanup sensitive fields here"]}),"\n",(0,i.jsx)(s.li,{children:"Attach additional data to record before returning to frontend"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"showbeforedatasourcerequest",children:"show.beforeDatasourceRequest?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"beforeDatasourceRequest"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/type-aliases/BeforeDataSourceRequestFunction",children:(0,i.jsx)(s.code,{children:"BeforeDataSourceRequestFunction"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Typical use-cases:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"request additional data from database before returning to frontend for soft-join"}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"overrides-2",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.hooks"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"label",children:"label"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"label"}),": ",(0,i.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"overrides-3",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.label"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"options",children:"options"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"options"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/interfaces/ResourceOptions",children:(0,i.jsx)(s.code,{children:"ResourceOptions"})})]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"plugins",children:"plugins?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"plugins"}),": ",(0,i.jsx)(s.a,{href:"/docs/api/types/Back/interfaces/IAdminForthPlugin",children:(0,i.jsx)(s.code,{children:"IAdminForthPlugin"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Array of plugins which will be used to modify resource configuration."}),"\n",(0,i.jsx)(s.h4,{id:"overrides-4",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.plugins"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"recordlabel",children:"recordLabel()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"recordLabel"}),": (",(0,i.jsx)(s.code,{children:"record"}),") => ",(0,i.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{style:{textAlign:"left"},children:"Parameter"}),(0,i.jsx)(s.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.code,{children:"record"})}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.code,{children:"any"})})]})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.h4,{id:"overrides-5",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.recordLabel"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"resourceid",children:"resourceId"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"resourceId"}),": ",(0,i.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"overrides-6",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.resourceId"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"table",children:"table"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"table"}),": ",(0,i.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Table name in database which will be used to fetch data from. Might be case sensitive."}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"Omit.table"})})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>l,x:()=>c});var n=r(6540);const i={},d=n.createContext(i);function l(e){const s=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(d.Provider,{value:s},e.children)}}}]);