"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[1253],{5246:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=t(4848),a=t(8453);const i={},o="S3 Upload",l={id:"tutorial/Plugins/s3Upload",title:"s3Upload",description:"\ud83e\udef8This plugin is under development and not yet released",source:"@site/docs/tutorial/Plugins/05-s3Upload.md",sourceDirName:"tutorial/Plugins",slug:"/tutorial/Plugins/s3Upload",permalink:"/docs/tutorial/Plugins/s3Upload",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"QuillEditor",permalink:"/docs/tutorial/Plugins/QuillEditor"}},r={},c=[{value:"Usage",id:"usage",level:2}];function u(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\ud83e\udef8This plugin is under development and not yet released"}),"\n"]}),"\n",(0,s.jsx)(e.h1,{id:"s3-upload",children:"S3 Upload"}),"\n",(0,s.jsx)(e.p,{children:"This plugin allows you to upload files to Amazon S3 bucket."}),"\n",(0,s.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(e.p,{children:["Add column to ",(0,s.jsx)(e.code,{children:"aparts"})," resource configuration:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",metastring:'title="./index.ts"',children:"async function initDataBase() {\n  ...\n  // check column appartment_image in apartments table\n  const columns = await db.prepare('PRAGMA table_info(apartments);').all();\n  const columnExists = columns.some((c) => c.name === 'appartment_image');\n  if (!columnExists) {\n    await db.prepare('ALTER TABLE apartments ADD COLUMN appartment_image VARCHAR(255);').run();\n  }\n}\n\nexport const admin = new AdminForth(\n  ...\n{\n  ...\n  resourceId: 'aparts',\n  columns: [\n    ...\n    {\n      name: 'appartment_image',\n      showIn: ['list', 'show'], // if you will try to show it in edit/create view, plugin will disable it anyway\n      ...\n    }\n    ...\n  ],\n  plugins: [\n    new S3UploadPlugin({\n      pathColumnName: 'appartment_image',\n      uploadColumnLabel: 'Upload preview', // label of upload field\n      s3Bucket: 'my-bucket',\n      s3Region: 'us-east-1',\n      s3AccessKeyId: process.env.AWS_ACCESS_KEY_ID,\n      s3SecretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n      s3ACL: 'public-read', // ACL which will be set to uploaded file\n      s3Path: ({originalFilename, originalExtension, contentType}) => `/aparts/${new Date().getFullYear()}/${uuid()}.${originalExtension}`,\n\n      // Used to display preview (if it is image) in list and show views\n      // previewUrl: ({record, path}) => `https://my-bucket.s3.amazonaws.com/${path}`,\n  ...\n}\n"})})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>l});var s=t(6540);const a={},i=s.createContext(a);function o(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);