"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[186],{2888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var o=t(641),i=t(4848),a=t(8453);const r={slug:"keycloak-setup-example",title:"Setup AdminForth Authorization via Keycloak",authors:"mpipkun",tags:["keycloak","authentication"],description:"The ultimate guide to setting up AdminForth authorization via Keycloak"},s=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create a Docker Compose File",id:"step-1-create-a-docker-compose-file",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Keycloak is an open-source identity and access management solution that provides authentication and authorization services. It can be used to secure applications and services by managing user identities, roles, and permissions."}),"\n",(0,i.jsx)(n.p,{children:"In this guide, we will walk you through the process of setting up AdminForth authorization via Keycloak. Most important we will show you how to set up Keycloak in a Docker container and configure it to work with AdminForth."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Docker installed on your machine"}),"\n",(0,i.jsx)(n.li,{children:"Basic knowledge of Docker and Docker Compose"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-1-create-a-docker-compose-file",children:"Step 1: Create a Docker Compose File"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"docker-compose.yml"})," file in your project directory. This file will define the Keycloak service and its configuration."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'services:\n  pg:\n    image: postgres:latest\n    environment:\n      POSTGRES_USER: demo\n      POSTGRES_PASSWORD: demo\n      POSTGRES_DB: demo\n    ports:\n      - "5432:5432"\n    volumes:\n      - pg-data:/var/lib/postgresql/data\n  keycloak:\n    image: quay.io/keycloak/keycloak:latest\n    command: start-dev --import-realm\n    environment:\n      - KEYCLOAK_ADMIN=admin\n      - KEYCLOAK_ADMIN_PASSWORD=admin\n      - DB_VENDOR=postgres\n      - DB_ADDR=pg\n      - DB_DATABASE=demo\n      - DB_USER=demo\n      - DB_PASSWORD=demo\n      - KEYCLOAK_IMPORT=/opt/keycloak/data/import/keycloak-realm.json\n      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID} # TODO how to generate this values? Are they needed here at all\n      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET} # TODO  how to generate this values? Are they needed here at all\n      - KEYCLOAK_URL=${KEYCLOAK_URL} # TODO  how to generate this values? Are they needed here at all\n      - KEYCLOAK_REALM=${KEYCLOAK_REALM} # TODO  how to generate this values? Are they needed here at all\n    ports:\n      - "8080:8080"\n    depends_on:\n      - pg\n    volumes:\n      - keycloak-data:/opt/keycloak/data\n      - ./keycloak-realm.json:/opt/keycloak/data/import/keycloak-realm.json\n\nvolumes:\n  keycloak-data:\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"./keycloak-realm.json"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "id": "AdminforthRealm",\n    "realm": "AdminforthRealm",\n    "enabled": true,\n    "users": [\n      {\n        "username": "testuser",\n        "enabled": true,\n        "credentials": [\n          {\n            "type": "password",\n            "value": "testpassword"\n          }\n        ],\n        "email": "testuser@example.com",\n        "emailVerified": true\n      }\n    ],\n    "clients": [\n        {\n        "clientId": "adminforth-client",\n        "enabled": true,\n        "publicClient": true,\n        "redirectUris": ["*"],\n        "defaultClientScopes": ["openid", "email", "profile"]\n        }\n    ]\n  }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Run service:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker compose -p af-dev-demo up -d --build --remove-orphans --wait\n"})}),"\n",(0,i.jsx)(n.h1,{id:"todo",children:"TODO"}),"\n",(0,i.jsx)(n.p,{children:"What to click to generate client ID and secret?"})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(6540);const i={},a=o.createContext(i);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:n},e.children)}},641:e=>{e.exports=JSON.parse('{"permalink":"/blog/keycloak-setup-example","source":"@site/blog/2025-03-25-keycloak/index.md","title":"Setup AdminForth Authorization via Keycloak","description":"The ultimate guide to setting up AdminForth authorization via Keycloak","date":"2025-03-25T00:00:00.000Z","tags":[{"inline":false,"label":"Keycloak","permalink":"/blog/tags/keycloak","description":"Keycloak is an open-source identity and access management solution for modern applications and services."},{"inline":false,"label":"Auth","permalink":"/blog/tags/auth","description":"Authentication is the process of verifying the identity of a user or system. Authentication is a critical component of security in software applications and systems."}],"readingTime":1.53,"hasTruncateMarker":true,"authors":[{"name":"Maxim Pipkun","title":"Developer of AdminForth","url":"https://github.com/NoOne7135","imageURL":"https://avatars.githubusercontent.com/u/120279695?v=4","key":"mpipkun","page":null}],"frontMatter":{"slug":"keycloak-setup-example","title":"Setup AdminForth Authorization via Keycloak","authors":"mpipkun","tags":["keycloak","authentication"],"description":"The ultimate guide to setting up AdminForth authorization via Keycloak"},"unlisted":false,"nextItem":{"title":"IaaC Simplified: Automating EC2 Deployments with GitHub Actions, Terraform, Docker & Distribution Registry","permalink":"/blog/compose-ec2-deployment-github-actions-registry"}}')}}]);