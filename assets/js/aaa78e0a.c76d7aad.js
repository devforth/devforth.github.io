"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[2889],{9086:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=n(4848),r=n(8453);const s={},a=void 0,o={id:"tutorial/Plugins/AuditLog",title:"AuditLog",description:"AuditLog plugin allows to limit access to the resource actions (list, show, create, update, delete) based on custom callback.",source:"@site/docs/tutorial/05-Plugins/01-AuditLog.md",sourceDirName:"tutorial/05-Plugins",slug:"/tutorial/Plugins/AuditLog",permalink:"/docs/tutorial/Plugins/AuditLog",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deploy in Docker",permalink:"/docs/tutorial/deploy"},next:{title:"Two-Factor Authentication Plugin",permalink:"/docs/tutorial/Plugins/TwoFactorsAuth"}},d={},l=[{value:"Installation",id:"installation",level:2},{value:"Creating table for storing activity data",id:"creating-table-for-storing-activity-data",level:2},{value:"Setting up the resource and dataSource for plugin",id:"setting-up-the-resource-and-datasource-for-plugin",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["AuditLog plugin allows to limit access to the resource actions (list, show, create, update, delete) based on custom callback.\nCallback accepts ",(0,i.jsx)(t.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminUser/",children:"AdminUser"})," which you can use to define access rules."]}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"npm i @adminforth/audit-log --save\n"})}),"\n",(0,i.jsx)(t.p,{children:"Import:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="./resources/auditLogs.ts"',children:"import AuditLogPlugin from '@adminforth/audit-log';\nimport { AdminForthDataTypes } from 'adminforth'\nimport { v4 as uuid } from 'uuid';\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/docs/tutorial/gettingStarted",children:"Getting Started"})," will be used as base for this example."]}),"\n",(0,i.jsx)(t.h2,{id:"creating-table-for-storing-activity-data",children:"Creating table for storing activity data"}),"\n",(0,i.jsx)(t.p,{children:"For the first, to track records changes, we need to set up the database and table with certain fields inside where tracked data will be stored."}),"\n",(0,i.jsxs)(t.p,{children:["First of all you should create this table in your own database ",(0,i.jsx)(t.code,{children:"./schema.prisma"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:"title='./schema.prisma'",children:"model audit_logs {\n  id                String      @id\n  created_at        DateTime  /// timestamp of applied change\n  resource_id       String    /// identifier of resource where change were applied\n  user_id           String    /// identifier of user who made the changes\n  action            String    /// type of change (create, edit, delete)\n  diff              String?   /// delta betwen before/after versions\n  record_id         String?   /// identifier of record that been changed\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"Also to make this code start"}),"\n",(0,i.jsx)(t.h2,{id:"setting-up-the-resource-and-datasource-for-plugin",children:"Setting up the resource and dataSource for plugin"}),"\n",(0,i.jsx)(t.p,{children:'Logger sets up for all the resources by default. But you can exclude unwanted resources with option "excludeResourceIds". In this example, we\'ll exclude resource "users" from logging.'}),"\n",(0,i.jsx)(t.p,{children:"Also, it excludes itself to avoid infinte logging loop."}),"\n",(0,i.jsxs)(t.p,{children:["Create ",(0,i.jsx)(t.code,{children:"auditLogs.ts"})," in ",(0,i.jsx)(t.code,{children:"resources"})," folder:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:"title='./resources/auditLogs.ts'",children:"  export default {\n    dataSource: 'maindb', \n    table: 'audit_logs',\n    columns: [\n      { name: 'id', primaryKey: true, required: false, fillOnCreate: ({initialRecord}: any) => uuid() },\n      { name: 'created_at', required: false },\n      { name: 'resource_id', required: false },\n      { name: 'user_id', required: false, \n          foreignResource: {\n          resourceId: 'users',\n        } },\n      { name: 'action', required: false },\n      { name: 'diff', required: false, type: AdminForthDataTypes.JSON, showIn: ['show'] },\n      { name: 'record_id', required: false },\n    ],\n    options: {\n      allowedActions: {\n        edit: false,\n        delete: false,\n      }\n    },\n    plugins: [\n      new AuditLogPlugin({\n        // if you want to exclude some resources from logging\n        //excludeResourceIds: ['users'],\n        resourceColumns: {\n          resourceIdColumnName: 'resource_id',\n          resourceActionColumnName: 'action',\n          resourceDataColumnName: 'diff',\n          resourceUserIdColumnName: 'user_id',\n          resourceRecordIdColumnName: 'record_id',\n          resourceCreatedColumnName: 'created_at'\n        }\n      }),\n    ],\n  }\n"})}),"\n",(0,i.jsx)(t.p,{children:"Also, we need to add it to menu:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"menu: [\n  ...\n//diff-add\n  {\n//diff-add\n      label: 'Audit Logs',\n//diff-add\n      icon: 'flowbite:search-outline',\n//diff-add\n      resourceId: 'audit_logs',\n//diff-add\n  }\n]\n"})}),"\n",(0,i.jsx)(t.p,{children:"That's it! Now you can see the logs in the table"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"alt text",src:n(1476).A+"",width:"3700",height:"1932"})}),"\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"/docs/api/plugins/audit-log/types/type-aliases/PluginOptions",children:"API Reference"})," for more all options."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1476:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/AuditLog-3c39146fa0794aaa07158fc2eebfc648.png"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(6540);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);