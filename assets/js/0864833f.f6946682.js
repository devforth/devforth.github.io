"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[2389],{7995:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>a});var t=i(4848),s=i(8453);const o={},r="Rich editor",d={id:"tutorial/Plugins/RichEditor",title:"Rich editor",description:"Under the hood this plugin uses Quill. Quill is a free, open source WYSIWYG editor built for the modern web.",source:"@site/docs/tutorial/05-Plugins/04-RichEditor.md",sourceDirName:"tutorial/05-Plugins",slug:"/tutorial/Plugins/RichEditor",permalink:"/docs/tutorial/Plugins/RichEditor",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ForeignInlineList",permalink:"/docs/tutorial/Plugins/ForeignInlineList"},next:{title:"Upload",permalink:"/docs/tutorial/Plugins/upload"}},l={},a=[{value:"Usage",id:"usage",level:2},{value:"Completion",id:"completion",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"rich-editor",children:"Rich editor"}),"\n",(0,t.jsxs)(e.p,{children:["Under the hood this plugin uses ",(0,t.jsx)(e.a,{href:"https://quilljs.com/",children:"Quill"}),". Quill is a free, open source WYSIWYG editor built for the modern web."]}),"\n",(0,t.jsx)(e.p,{children:"This plugin allows you to use Quill editor in your AdminForth application."}),"\n",(0,t.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(e.p,{children:"First, install the plugin:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"npm i @adminforth/rich-editor --save\n"})}),"\n",(0,t.jsx)(e.p,{children:"Import plugin:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",metastring:'title="./resources/apartments.ts"',children:"import RichEditorPlugin from '@adminforth/rich-editor';\n"})}),"\n",(0,t.jsx)(e.p,{children:"Now instantiate the plugin and add it to the configuration:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",metastring:'title="./resources/apartments.ts"',children:"\n{\n  ...\n  resourceId: 'aparts',\n  columns: [\n    ...\n    {\n      name: 'description',\n//diff-add\n      type: AdminForthDataTypes.RICHTEXT, // like plain AdminForthDataTypes.TEXT but renders HTML in show/list views\n      ...\n    }\n    ...\n  ],\n  ...\n  plugins: [\n    ...\n//diff-add\n    new RichEditorPlugin({\n//diff-add\n      htmlFieldName: 'description',\n//diff-add\n    }),\n    ...\n  ],\n}\n"})}),"\n",(0,t.jsxs)(e.p,{children:["Now you can see Quill editor in the ",(0,t.jsx)(e.code,{children:"description"})," field in the edit view:"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"alt text",src:i(6805).A+"",width:"3670",height:"2064"})}),"\n",(0,t.jsx)(e.h1,{id:"multiple-editors-in-one-resource",children:"Multiple editors in one resource"}),"\n",(0,t.jsx)(e.p,{children:"If you need multiple fields in one resource which happens rarely, just add multiple instances of the plugin:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:"{\n  ...\n  resourceId: 'promotion',\n  columns: [\n    ...\n    {\n      name: 'short_description',\n      type: AdminForthDataTypes.RICHTEXT,\n      ...\n    },\n    {\n      name: 'full_description',\n      type: AdminForthDataTypes.RICHTEXT,\n      ...\n    }\n    ...\n  ],\n  ...\n  plugins: [\n    ...\n    new QuillEditorPlugin({\n      htmlField: 'short_description',\n    }),\n    new QuillEditorPlugin({\n      htmlField: 'full_description',\n    }),\n    ...\n  ],\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"completion",children:"Completion"}),"\n",(0,t.jsxs)(e.p,{children:["To get completion suggestions for the text in the editor, you can use the ",(0,t.jsx)(e.code,{children:"completion"})," option. This option is an object with the following properties:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",metastring:'title="./index.ts"',children:"  new RichEditorPlugin({\n      htmlFieldName: 'description',\n//diff-add\n      completion: {\n//diff-add\n        provider: 'openai-chat-gpt',\n//diff-add\n        params: {\n//diff-add\n          apiKey: process.env.OPENAI_API_KEY as string,\n//diff-add\n          // model: 'gpt-4o',  gpt-4o-model is a default (cheapest one)\n//diff-add\n        },\n//diff-add\n        expert: {\n//diff-add\n          debounceTime: 250,\n//diff-add\n        }\n//diff-add\n      }\n    }),\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"alt text",src:i(7998).A+"",width:"1400",height:"1050"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},7998:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/gptDemo-7f2508ca0024430341592a6d40cf76c8.gif"},6805:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/image-2-f1e856fbaa6202d9e8fde0165763c5eb.png"},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>d});var t=i(6540);const s={},o=t.createContext(s);function r(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);