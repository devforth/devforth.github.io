"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[6991],{4335:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var l=i(4848),o=i(8453);const s={},r="AdminForthResourceColumn",d={id:"api/types/AdminForthConfig/type-aliases/AdminForthResourceColumn",title:"AdminForthResourceColumn",description:"AdminForthResourceColumn: object",source:"@site/docs/api/types/AdminForthConfig/type-aliases/AdminForthResourceColumn.md",sourceDirName:"api/types/AdminForthConfig/type-aliases",slug:"/api/types/AdminForthConfig/type-aliases/AdminForthResourceColumn",permalink:"/docs/api/types/AdminForthConfig/type-aliases/AdminForthResourceColumn",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"AdminForthResource",permalink:"/docs/api/types/AdminForthConfig/type-aliases/AdminForthResource"},next:{title:"AdminUser",permalink:"/docs/api/types/AdminForthConfig/type-aliases/AdminUser"}},t={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"_underlineType?",id:"_underlinetype",level:3},{value:"allowMinMaxQuery?",id:"allowminmaxquery",level:3},{value:"backendOnly?",id:"backendonly",level:3},{value:"components?",id:"components",level:3},{value:"editingNote?",id:"editingnote",level:3},{value:"enum?",id:"enum",level:3},{value:"fillOnCreate?",id:"filloncreate",level:3},{value:"foreignResource?",id:"foreignresource",level:3},{value:"isUnique?",id:"isunique",level:3},{value:"label?",id:"label",level:3},{value:"masked?",id:"masked",level:3},{value:"max?",id:"max",level:3},{value:"maxLength?",id:"maxlength",level:3},{value:"maxValue?",id:"maxvalue",level:3},{value:"min?",id:"min",level:3},{value:"minLength?",id:"minlength",level:3},{value:"minValue?",id:"minvalue",level:3},{value:"name",id:"name",level:3},{value:"primaryKey?",id:"primarykey",level:3},{value:"required?",id:"required",level:3},{value:"showIn?",id:"showin",level:3},{value:"sortable?",id:"sortable",level:3},{value:"type?",id:"type",level:3},{value:"validation?",id:"validation",level:3},{value:"virtual?",id:"virtual",level:3}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"adminforthresourcecolumn",children:"AdminForthResourceColumn"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"AdminForthResourceColumn"}),": ",(0,l.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Column describes one field in the table or collection in database."}),"\n",(0,l.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,l.jsx)(n.h3,{id:"_underlinetype",children:"_underlineType?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"_underlineType"}),": ",(0,l.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Internal type which indicates original type of column in database."}),"\n",(0,l.jsx)(n.h3,{id:"allowminmaxquery",children:"allowMinMaxQuery?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"allowMinMaxQuery"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Whether AdminForth will show this field in list view."}),"\n",(0,l.jsx)(n.h3,{id:"backendonly",children:"backendOnly?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"backendOnly"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"if true field will !not be passed to UI under no circumstances, but will be presented in hooks"}),"\n",(0,l.jsx)(n.h3,{id:"components",children:"components?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"components"}),": ",(0,l.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminForthFieldComponents",children:(0,l.jsx)(n.code,{children:"AdminForthFieldComponents"})})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Custom components which will be used to render this field in the admin panel."}),"\n",(0,l.jsx)(n.h3,{id:"editingnote",children:"editingNote?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"editingNote"}),": ",(0,l.jsx)(n.code,{children:"string"})," | ",(0,l.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Whether AdminForth will show editing note near the field in edit/create form."}),"\n",(0,l.jsx)(n.h3,{id:"enum",children:"enum?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"enum"}),": ",(0,l.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminForthColumnEnumItem",children:(0,l.jsx)(n.code,{children:"AdminForthColumnEnumItem"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Enum of possible values for this field."}),"\n",(0,l.jsx)(n.h3,{id:"filloncreate",children:"fillOnCreate?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"fillOnCreate"}),": ",(0,l.jsx)(n.code,{children:"Function"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Whether AdminForth will show this field in show view."}),"\n",(0,l.jsx)(n.h3,{id:"foreignresource",children:"foreignResource?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"foreignResource"}),": ",(0,l.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminForthForeignResource",children:(0,l.jsx)(n.code,{children:"AdminForthForeignResource"})})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Foreign resource which has pk column with values same that written in this column."}),"\n",(0,l.jsx)(n.h3,{id:"isunique",children:"isUnique?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"isUnique"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Whether AdminForth will request user to enter unique value during creating or editing record.\nThis option causes AdminForth to make a request to database to check if value is unique.\n(Constraints are not used, so for large-tables performance make sure you have unique index in database if you set this option to true)"}),"\n",(0,l.jsx)(n.h3,{id:"label",children:"label?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"label"}),": ",(0,l.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"How column can be labled in the admin panel.\nUse it for renaming columns. Defaulted to column name with Uppercased first letter."}),"\n",(0,l.jsx)(n.h3,{id:"masked",children:"masked?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"masked"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Masked fields will be displayed as ",(0,l.jsx)(n.code,{children:"*****"})," on Edit and Create pages."]}),"\n",(0,l.jsx)(n.h3,{id:"max",children:"max?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"max"}),": ",(0,l.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"maxlength",children:"maxLength?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"maxLength"}),": ",(0,l.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Maximum length of string that can be entered in this field."}),"\n",(0,l.jsx)(n.h3,{id:"maxvalue",children:"maxValue?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"maxValue"}),": ",(0,l.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Maximum value that can be entered in this field."}),"\n",(0,l.jsx)(n.h3,{id:"min",children:"min?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"min"}),": ",(0,l.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"minlength",children:"minLength?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"minLength"}),": ",(0,l.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Minimum length of string that can be entered in this field."}),"\n",(0,l.jsx)(n.h3,{id:"minvalue",children:"minValue?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"minValue"}),": ",(0,l.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Minimum value that can be entered in this field."}),"\n",(0,l.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"name"}),": ",(0,l.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Column name in database."}),"\n",(0,l.jsx)(n.h3,{id:"primarykey",children:"primaryKey?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"primaryKey"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Whether to use this column as record identifier.\nOnly one column can be primary key.\nAdminForth tries to guess primary key automatically first."}),"\n",(0,l.jsx)(n.h3,{id:"required",children:"required?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"required"}),": ",(0,l.jsx)(n.code,{children:"boolean"})," | ",(0,l.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Whether AdminForth will require this field to be filled in create and edit forms.\nCan be set to boolean or object with create and edit properties.\nIf boolean, it will be used for both create and edit forms."}),"\n",(0,l.jsx)(n.h3,{id:"showin",children:"showIn?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"showIn"}),": (",(0,l.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/enumerations/AdminForthResourcePages",children:(0,l.jsx)(n.code,{children:"AdminForthResourcePages"})})," | keyof ",(0,l.jsx)(n.em,{children:"typeof"})," ",(0,l.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/enumerations/AdminForthResourcePages",children:(0,l.jsx)(n.code,{children:"AdminForthResourcePages"})}),")[]"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"On which AdminForth pages this field will be shown. By default all.\nExample: if you want to show field only in create and edit pages, set it to"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"showIn: [AdminForthResourcePages.CREATE, AdminForthResourcePages.EDIT]\n"})}),"\n",(0,l.jsx)(n.h3,{id:"sortable",children:"sortable?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"sortable"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"type",children:"type?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"type"}),": ",(0,l.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/enumerations/AdminForthDataTypes",children:(0,l.jsx)(n.code,{children:"AdminForthDataTypes"})})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Type of data in column.\nAdminForth will use this information to render proper input fields in the admin panel.\nAdminForth tries to guess type of data from database column type automatically for typed databases like SQL-based.\nHowever you can explicitly set it to any value. E.g. set AdminForthDataTypes.DATETIME for your string column in SQLite, which stores ISO date strings."}),"\n",(0,l.jsx)(n.h3,{id:"validation",children:"validation?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"validation"}),": ",(0,l.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/ValidationObject",children:(0,l.jsx)(n.code,{children:"ValidationObject"})}),"[]"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Runtime validation Regexp rules for this field."}),"\n",(0,l.jsx)(n.h3,{id:"virtual",children:"virtual?"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"optional"})," ",(0,l.jsx)(n.strong,{children:"virtual"}),": ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Allows to make the field which does not exist in database table.\nExamples: add custom show field with user country flag:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"{\n label: 'Country Flag',\n type: AdminForthDataTypes.STRING,\n virtual: true,\n showIn: [AdminForthResourcePages.SHOW, AdminForthResourcePages.LIST],\n components: {\n   show: '@@/CountryFlag.vue',\n   list: '@@/CountryFlag.vue',\n  },\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["This field will be displayed in show and list views with custom component ",(0,l.jsx)(n.code,{children:"CountryFlag.vue"}),". CountryFlag.vue should be placed in custom folder and can be next:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"<template>\n {{ getFlagEmojiFromIso(record.ipCountry) }}\n</template>\n\n<script setup>\nconst props = defineProps(['record']);\n\nfunction getFlagEmojiFromIso(iso) {\n   return iso.toUpperCase().replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397));\n}\n<\/script>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var l=i(6540);const o={},s=l.createContext(o);function r(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);