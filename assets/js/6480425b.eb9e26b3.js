"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[6190],{3627:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var n=o(4848),s=o(8453);const i={},r="Custom bulk actions",a={id:"tutorial/Customization/bulkActions",title:"Custom bulk actions",description:"You might need to give admin users a feature to perform same action on multiple records at once.",source:"@site/docs/tutorial/03-Customization/09-bulkActions.md",sourceDirName:"tutorial/03-Customization",slug:"/tutorial/Customization/bulkActions",permalink:"/docs/tutorial/Customization/bulkActions",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Page Injections",permalink:"/docs/tutorial/Customization/pageInjections"},next:{title:"Deploy in Docker",permalink:"/docs/tutorial/deploy"}},c={},l=[];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"custom-bulk-actions",children:"Custom bulk actions"}),"\n",(0,n.jsx)(t.p,{children:"You might need to give admin users a feature to perform same action on multiple records at once."}),"\n",(0,n.jsxs)(t.p,{children:["For example you might want allow setting ",(0,n.jsx)(t.code,{children:"listed"})," field to ",(0,n.jsx)(t.code,{children:"false"})," for multiple apartment records at once."]}),"\n",(0,n.jsx)(t.p,{children:"AdminForth by default provides a checkbox in first column of the list view for this purposes."}),"\n",(0,n.jsxs)(t.p,{children:["By default AdminForth provides only one bulk action ",(0,n.jsx)(t.code,{children:"delete"})," which allows to delete multiple records at once\n(if deletion for records available by ",(0,n.jsx)(t.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminForthResource#optionsallowedactions",children:"resource.options.allowedActions"}),")"]}),"\n",(0,n.jsx)(t.p,{children:"To add custom bulk action quickly:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"{\n  ...\n  resourceId: 'aparts',\n     ...\n     options: {\n        bulkActions: [\n          {\n            label: 'Mark as listed',\n            icon: 'flowbite:eye-solid',\n            state:'active',\n            confirm: 'Are you sure you want to mark all selected apartments as listed?',\n            action: function ({selectedIds, adminUser}: any) {\n              const stmt = db.prepare(`UPDATE apartments SET listed = 1 WHERE id IN (${selectedIds.map(() => '?').join(',')})`);\n              stmt.run(...selectedIds);\n              return { ok: true, error: false, message: 'Marked as listed' }\n            },\n          }\n        ],\n      }\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"Action code is called on the server side only and allowed to only authorized users."}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"\ud83e\udee8 AdminForth provides no way to update the data, it is your responsibility to manage the data by selectedIds. You can use any ORM system\nor write raw queries to update the data."}),"\n"]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["\ud83e\udee8 You can use ",(0,n.jsx)(t.code,{children:"adminUser"})," object to check whether user is allowed to perform bulk action"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Here is how it looks:\n",(0,n.jsx)(t.img,{alt:"alt text",src:o(4845).A+"",width:"3670",height:"2044"})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},4845:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/image-3-d4c9125c15948567d55a08ec2fb1657e.png"},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>a});var n=o(6540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);