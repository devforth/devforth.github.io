"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[381],{168:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var a=t(4848),s=t(8453);const i={},o="Custom pages",r={id:"tutorial/Customization/customPages",title:"Custom pages",description:"Most Admin Panels should have some Dashboards or custom pages.",source:"@site/docs/tutorial/03-Customization/06-customPages.md",sourceDirName:"tutorial/03-Customization",slug:"/tutorial/Customization/customPages",permalink:"/docs/tutorial/Customization/customPages",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Limiting actions access",permalink:"/docs/tutorial/Customization/limitingAccess"},next:{title:"Alerts and confirmations",permalink:"/docs/tutorial/Customization/alert"}},d={},l=[{value:"Defining custom API for own page and components",id:"defining-custom-api-for-own-page-and-components",level:2}];function c(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"custom-pages",children:"Custom pages"}),"\n",(0,a.jsx)(e.p,{children:"Most Admin Panels should have some Dashboards or custom pages."}),"\n",(0,a.jsx)(e.p,{children:"In AdminForth creation of custom page is very simpl."}),"\n",(0,a.jsxs)(e.p,{children:["To add custom package to SPA bundle you have to initialize npm in ",(0,a.jsx)(e.code,{children:"custom"})," directory and install required packages:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"cd ./custom\nnpm init -y\nnpm install apexcharts --save-dev\n"})}),"\n",(0,a.jsxs)(e.p,{children:["Create a Vue component in the ",(0,a.jsx)(e.code,{children:"custom"})," directory of your project, e.g. ",(0,a.jsx)(e.code,{children:"Dashboard.vue"}),":"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-html",metastring:'title="./custom/Dashboard.vue"',children:'<template>\n  <div class="px-4 py-8 bg-blue-50 dark:bg-gray-900 dark:shadow-none h-screen">\n    <h1 class="mb-4 text-xl font-extrabold text-gray-900 dark:text-white md:text-2xl lg:text-3xl"><span\n        class="text-transparent bg-clip-text bg-gradient-to-r to-emerald-600 from-sky-400">Apartments</span>\n      Statistics.</h1>\n\n    <div class="grid grid-cols-3 gap-4">\n      <div class="max-w-md w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6" v-if="data">\n        <div class="flex justify-between">\n          <div>\n            <h5 class="leading-none text-3xl font-bold text-gray-900 dark:text-white pb-2">{{ data.totalAparts }}</h5>\n            <p class="text-base font-normal text-gray-500 dark:text-gray-400">Apartments last 7 days</p>\n          </div>\n\n        </div>\n        <div id="area-chart"></div>\n\n      </div>\n\n      <div class="w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6 row-span-2 col-span-2" v-if="data">\n\n        <div class="grid grid-cols-2 py-3">\n          <dl>\n            <dt class="text-base font-normal text-gray-500 dark:text-gray-400 pb-1">Listed price</dt>\n            <dd class="leading-none text-xl font-bold text-green-500 dark:text-green-400">{{\n        new Intl.NumberFormat(\'en-US\', { style: \'currency\', currency: \'USD\' }).format(\n          data.totalListedPrice,\n        ) }}\n            </dd>\n          </dl>\n          <dl>\n            <dt class="text-base font-normal text-gray-500 dark:text-gray-400 pb-1">Unlisted price</dt>\n            <dd class="leading-none text-xl font-bold text-red-600 dark:text-red-500">{{\n        new Intl.NumberFormat(\'en-US\', { style: \'currency\', currency: \'USD\' }).format(\n          data.totalUnlistedPrice,\n        ) }}\n            </dd>\n          </dl>\n        </div>\n\n        <div id="bar-chart"></div>\n\n      </div>\n\n      <div class="max-w-md w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6" v-if="data">\n        <div class="flex justify-between mb-5">\n          <div>\n            <p class="text-base font-normal text-gray-500 dark:text-gray-400">\n              Unlisted vs Listed price\n            </p>\n          </div>\n        </div>\n        <div id="size-chart" class="[&>div]:mx-auto"></div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \'vue\';\nimport ApexCharts from \'apexcharts\';\nimport dayjs from \'dayjs\';\nimport { callApi } from \'@/utils\';\n\nconst data = ref({});\n\nconst optionsC1 = {\n  chart: {\n    height: 145,\n    type: "area",\n    fontFamily: "Inter, sans-serif",\n    dropShadow: {\n      enabled: false,\n    },\n    toolbar: {\n      show: false,\n    },\n  },\n  tooltip: {\n    enabled: true,\n    x: {\n      show: false,\n    },\n  },\n  fill: {\n    type: "gradient",\n    gradient: {\n      opacityFrom: 0.55,\n      opacityTo: 0,\n      shade: "#1C64F2",\n      gradientToColors: ["#1C64F2"],\n    },\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  stroke: {\n    width: 6,\n  },\n  grid: {\n    show: false,\n    strokeDashArray: 4,\n    padding: {\n      left: 2,\n      right: 2,\n      top: 0\n    },\n  },\n  series: [\n    {\n      name: "Added apartments",\n      data: [],\n      color: "#1A56DB",\n    },\n  ],\n  xaxis: {\n    categories: [],\n    labels: {\n      show: false,\n    },\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n  },\n  yaxis: {\n    show: false,\n  },\n};\n\nconst optionsC2 = {\n  series: [\n    {\n      name: "Listed",\n      color: "#31C48D",\n      data: [],\n    },\n    {\n      name: "Unlisted",\n      data: [],\n      color: "#F05252",\n    }\n  ],\n  chart: {\n    sparkline: {\n      enabled: false,\n    },\n    type: "bar",\n    width: "100%",\n    height: 400,\n    toolbar: {\n      show: false,\n    }\n  },\n  fill: {\n    opacity: 1,\n  },\n  plotOptions: {\n    bar: {\n      horizontal: true,\n      columnWidth: "100%",\n      borderRadiusApplication: "end",\n      borderRadius: 6,\n      dataLabels: {\n        position: "top",\n      },\n    },\n  },\n  legend: {\n    show: true,\n    position: "bottom",\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  tooltip: {\n    shared: true,\n    intersect: false,\n    formatter: function (value) {\n      return value\n    },\n  },\n  xaxis: {\n    labels: {\n      show: true,\n      style: {\n        fontFamily: "Inter, sans-serif",\n        cssClass: \'text-xs font-normal fill-gray-500 dark:fill-gray-400\'\n      },\n      formatter: function (value) {\n        return value\n      }\n    },\n    categories: [],\n    axisTicks: {\n      show: false,\n    },\n    axisBorder: {\n      show: false,\n    },\n  },\n  yaxis: {\n    labels: {\n      show: true,\n      style: {\n        fontFamily: "Inter, sans-serif",\n        cssClass: \'text-xs font-normal fill-gray-500 dark:fill-gray-400\'\n      }\n    }\n  },\n  grid: {\n    show: true,\n    strokeDashArray: 4,\n    padding: {\n      left: 10,\n      right: 2,\n      // top: -20\n    },\n  },\n  fill: {\n    opacity: 1,\n  }\n}\n\nconst optionsC3 = {\n  chart: {\n    height: 145,\n    type: "area",\n    fontFamily: "Inter, sans-serif",\n    dropShadow: {\n      enabled: false,\n    },\n    toolbar: {\n      show: false,\n    },\n  },\n  tooltip: {\n    enabled: true,\n    x: {\n      show: false,\n    },\n  },\n  fill: {\n    type: "gradient",\n    gradient: {\n      opacityFrom: 0.55,\n      opacityTo: 0,\n      shade: "#1C64F2",\n      gradientToColors: ["#1C64F2"],\n    },\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  stroke: {\n    width: 6,\n  },\n  grid: {\n    show: false,\n    strokeDashArray: 4,\n    padding: {\n      left: 2,\n      right: 2,\n      top: -26\n    },\n  },\n  series: [\n    {\n      name: "Listed Price",\n      data: [],\n      color: "#1A56DB",\n    },\n    {\n      name: "Unlisted Price",\n      data: [],\n      color: "#7E3BF2",\n    },\n  ],\n  xaxis: {\n    categories: [],\n    labels: {\n      show: false,\n    },\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n  },\n  yaxis: {\n    show: false,\n    labels: {\n      formatter: function (value) {\n        return \'$\' + value;\n      }\n    }\n  },\n}\n\nonMounted(async () => {\n  // Fetch data from the API\n  // and set it to the chartData\n  try {\n    data.value = await callApi({path: \'/api/dashboard/\', method: \'GET\'});\n  } catch (error) {\n    window.adminforth.alert({\n      message: `Error fetching data: ${error.message}`,\n      variant: \'danger\',\n      timeout: 30,\n    });\n  }\n\n  const apartsByDaysReverse = data.value.apartsByDays.reverse();\n\n  optionsC1.series[0].data = apartsByDaysReverse.map((item) => item.count);\n  optionsC1.xaxis.categories = apartsByDaysReverse.map((item) => dayjs(item.day).format(\'DD MMM\'));\n  const chart = new ApexCharts(document.getElementById("area-chart"), optionsC1);\n  chart.render();\n\n  optionsC2.series[0].data = data.value.listedVsUnlistedByDays.map((item) => item.listed);\n  optionsC2.series[1].data = data.value.listedVsUnlistedByDays.map((item) => item.unlisted);\n  optionsC2.xaxis.categories = data.value.listedVsUnlistedByDays.map((item) => dayjs(item.day).format(\'DD MMM\'));\n  const chart2 = new ApexCharts(document.getElementById("bar-chart"), optionsC2);\n  chart2.render();\n\n  optionsC3.series[0].data = data.value.listedVsUnlistedPriceByDays.map((item) => item.listedPrice.toFixed(2));\n  optionsC3.series[1].data = data.value.listedVsUnlistedPriceByDays.map((item) => item.unlistedPrice.toFixed(2));\n  optionsC3.xaxis.categories = data.value.listedVsUnlistedPriceByDays.map((item) => dayjs(item.day).format(\'DD MMM\'));\n  const chart3 = new ApexCharts(document.getElementById("size-chart"), optionsC3);\n  chart3.render();\n})\n<\/script>\n'})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsxs)(e.p,{children:["\u261d\ufe0f use ",(0,a.jsx)(e.a,{href:"https://flowbite.com/",children:"https://flowbite.com/"})," to copy-paste pre-designed tailwind design blocks for your pages"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Now let's add this page to the AdminForth menu and make it homepage instead of Apartments page:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",metastring:'title="/index.ts"',children:"menu: [\n//diff-add\n    {\n//diff-add\n      label: 'Dashboard',\n//diff-add\n      path: '/overview',\n//diff-add\n      homepage: true,\n//diff-add\n      icon: 'flowbite:chart-pie-solid',\n//diff-add\n      component: '@@/Dashboard.vue',\n//diff-add\n    },\n    {\n      label: 'Core',\n      icon: 'flowbite:brain-solid',\n      open: true,\n      children: [\n        {\n//diff-remove\n          homepage: true,  \n          label: 'Apartments',\n          icon: 'flowbite:home-solid',\n          resourceId: 'aparts',\n        },\n      ]\n    },\n"})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsxs)(e.p,{children:["\u261d\ufe0f To find icon go to ",(0,a.jsx)(e.a,{href:"https://icon-sets.iconify.design/flowbite/?query=chart",children:"https://icon-sets.iconify.design/flowbite/?query=chart"}),", click on icon you like and copy name:\n",(0,a.jsx)(e.img,{alt:"Iconify icon select",src:t(3800).A+"",width:"2215",height:"1532"})]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"You might notice that in mounted hook page fetches custom endpoint '/api/dashboard-stats'.\nNow we have to define this endpoint in the backend to make our page work:"}),"\n",(0,a.jsx)(e.h2,{id:"defining-custom-api-for-own-page-and-components",children:"Defining custom API for own page and components"}),"\n",(0,a.jsxs)(e.p,{children:["Open ",(0,a.jsx)(e.code,{children:"index.ts"})," file and add the following code ",(0,a.jsx)(e.em,{children:"BEFORE"})," ",(0,a.jsx)(e.code,{children:"admin.express.serve("})," !"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",metastring:'title="/index.ts"',children:"\n....\n\napp.get(`${ADMIN_BASE_URL}/api/dashboard/`,\n  admin.express.authorize(\n    async (req, res) => {\n      const days = req.body.days || 7;\n      const apartsByDays = await db.prepare(\n        `SELECT \n          strftime('%Y-%m-%d', created_at, 'unixepoch') as day, \n          COUNT(*) as count \n        FROM apartments \n        GROUP BY day \n        ORDER BY day DESC\n        LIMIT ?;\n        `\n      ).all(days);\n\n      const totalAparts = apartsByDays.reduce((acc, { count }) => acc + count, 0);\n\n      // add listed, unlisted, listedPrice, unlistedPrice\n      const listedVsUnlistedByDays = await db.prepare(\n        `SELECT \n          strftime('%Y-%m-%d', created_at, 'unixepoch') as day, \n          SUM(listed) as listed, \n          COUNT(*) - SUM(listed) as unlisted,\n          SUM(listed * price) as listedPrice,\n          SUM((1 - listed) * price) as unlistedPrice\n        FROM apartments\n        GROUP BY day\n        ORDER BY day DESC\n        LIMIT ?;\n        `\n      ).all(days);\n\n      const listedVsUnlistedPriceByDays = await db.prepare(\n        `SELECT \n          strftime('%Y-%m-%d', created_at, 'unixepoch') as day, \n          SUM(listed * price) as listedPrice,\n          SUM((1 - listed) * price) as unlistedPrice\n        FROM apartments\n        GROUP BY day\n        ORDER BY day DESC\n        LIMIT ?;\n        `\n      ).all(days);\n        \n      const totalListedPrice = Math.round(listedVsUnlistedByDays.reduce((acc, { listedPrice }) => acc + listedPrice, 0));\n      const totalUnlistedPrice = Math.round(listedVsUnlistedByDays.reduce((acc, { unlistedPrice }) => acc + unlistedPrice, 0));\n\n      res.json({ \n        apartsByDays,\n        totalAparts,\n        listedVsUnlistedByDays,\n        totalListedPrice,\n        totalUnlistedPrice,\n        listedVsUnlistedPriceByDays,\n      });\n    }\n  )\n);\n\n// serve after you added all api\nadmin.express.serve(app, express)\nadmin.discoverDatabases();\n\n"})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsxs)(e.p,{children:["\u261d\ufe0f Please note that we are using ",(0,a.jsx)(e.code,{children:"admin.express.authorize"})," middleware to check if the user is logged in. If you want to make this endpoint public, you can remove this middleware. If user is not logged in, the request will return 401 Unauthorized status code, and protect our statistics from leak."]}),"\n"]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsxs)(e.p,{children:["\u261d\ufe0f Moreover if you wrap your endpoint with ",(0,a.jsx)(e.code,{children:"admin.express.authorize"})," middleware, you can access ",(0,a.jsx)(e.code,{children:"req.adminUser"})," object in your endpoint to get the current user information."]}),"\n"]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\u261d\ufe0f AdminForth does not provide any facility to access data in database. You are free to use any ORM like Prisma, TypeORM, Sequelize,\nmongoose, or just use raw SQL queries against your tables."}),"\n"]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\u261d\ufe0f To call API from frontend component we use Adminforth's callApi method.\nHowever this is not mandatory. Alternatively you can just use plain fetch:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:"//diff-remove\n  data.value = await callApi({path: '/api/dashboard/', method: 'GET'});\n//diff-add\n  const response = await fetch('/api/dashboard/');\n//diff-add\n  data.value = await response.json();\n"})}),"\n",(0,a.jsx)(e.p,{children:"however, the callApi function will handle path prefixing(you can change baseUrl and it will take this into account) and 401 redirect to login when user is logged out"}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Demo:"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"AdminForth dashboard demo",src:t(7037).A+"",width:"3449",height:"1812"})})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},3800:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/image-icon-select-ca7b83c5452ac54e6ddb41bac6c0c64c.png"},7037:(n,e,t)=>{t.d(e,{A:()=>a});const a=t.p+"assets/images/rpl-42d4f1eb05aa42bf95fea1462ea0fbcd.gif"},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>r});var a=t(6540);const s={},i=a.createContext(s);function o(n){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);