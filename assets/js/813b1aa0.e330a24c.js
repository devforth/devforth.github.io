"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[9996],{7276:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=t(4848),r=t(8453);const a={},s=void 0,o={id:"tutorial/Plugins/AuditLog",title:"AuditLog",description:"AuditLog plugin allows to limit access to the resource actions (list, show, create, update, delete) based on custom callback.",source:"@site/docs/tutorial/Plugins/AuditLog.md",sourceDirName:"tutorial/Plugins",slug:"/tutorial/Plugins/AuditLog",permalink:"/docs/tutorial/Plugins/AuditLog",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deploy in Docker",permalink:"/docs/tutorial/deploy"},next:{title:"ForeignInlineList",permalink:"/docs/tutorial/Plugins/ForeignInlineList"}},l={},d=[{value:"Installation",id:"installation",level:2},{value:"Creating table for storing activity data",id:"creating-table-for-storing-activity-data",level:2},{value:"Setting up the resource and dataSource for plugin",id:"setting-up-the-resource-and-datasource-for-plugin",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["AuditLog plugin allows to limit access to the resource actions (list, show, create, update, delete) based on custom callback.\nCallback accepts ",(0,i.jsx)(n.a,{href:"/docs/api/types/AdminForthConfig/type-aliases/AdminUser/",children:"AdminUser"})," which you can use to define access rules."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"Plugin is already installed into adminforth, to import:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import AuditLogPlugin from 'adminforth/plugins/AuditLogPlugin';\n"})}),"\n",(0,i.jsx)(n.p,{children:"If yu are using pure Node without TypeScript, you can use the following code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import AuditLogPlugin from 'adminforth/dist/plugins/AuditLogPlugin/index.ts';\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/tutorial/gettingStarted",children:"Getting Started"})," will be used as base for this example."]}),"\n",(0,i.jsx)(n.h2,{id:"creating-table-for-storing-activity-data",children:"Creating table for storing activity data"}),"\n",(0,i.jsx)(n.p,{children:"For the first, to track records changes, we need to set up the database and table with certain fields inside where tracked data will be stored."}),"\n",(0,i.jsx)(n.p,{children:"In this example, you should create this table in your own database:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE audit_logs(\n    id uuid NOT NULL,  -- identifier of applied change record \n    created_at timestamp without time zone, -- timestamp of applied change\n    resource_id varchar(255), -- identifier of resource where change were applied\n    user_id uuid, -- identifier of user who made the changes\n    "action" varchar(255), -- type of change (create, edit, delete)\n    diff text, -- delta betwen before/after versions\n    record_id varchar, -- identifier of record that been changed\n    PRIMARY KEY(id)\n);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"setting-up-the-resource-and-datasource-for-plugin",children:"Setting up the resource and dataSource for plugin"}),"\n",(0,i.jsx)(n.p,{children:'Logger sets up for all the resources by default. But you can exclude unwanted resources with option "excludeResourceIds". In this example, we\'ll exclude resource "users" from logging.'}),"\n",(0,i.jsx)(n.p,{children:"Also, it excludes itself to avoid infinte logging loop."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"    dataSources: [\n        ...\n        {\n            id: 'db2',\n            url: '<url to your database>',\n        },\n    ],\n    resources: [\n    ...\n    {\n        dataSource: 'db2', table: 'audit_logs',\n        columns: [\n            { name: 'id', primaryKey: true, required: false, fillOnCreate: ({initialRecord}: any) => uuid() },\n            { name: 'created_at', required: false },\n            { name: 'resource_id', required: false },\n            { name: 'user_id', required: false },\n            { name: 'action', required: false },\n            { name: 'diff', required: false },\n            { name: 'record_id', required: false },\n        ],\n        options: {\n            allowedActions: {\n                edit: false,\n                delete: false,\n            }\n        },\n        plugins: [\n            new AuditLogPlugin({\n                excludeResourceIds: ['users'],\n                resourceColumns: {\n                    resourceIdColumnName: 'resource_id',\n                    resourceActionColumnName: 'action',\n                    resourceDataColumnName: 'diff',\n                    resourceUserIdColumnName: 'user_id',\n                    resourceRecordIdColumnName: 'record_id',\n                    resourceCreatedColumnName: 'created_at'\n                }\n            }),\n        ],\n    }\n    ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Also, we need to add it to menu:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\n    label: 'Logs',\n    icon: 'flowbite:search-outline',\n    resourceId: 'audit_logs',\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"That's it! Now you can see the logs in the table"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alt text",src:t(6746).A+"",width:"3811",height:"1251"})}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/docs/api/plugins/AuditLogPlugin/types/type-aliases/PluginOptions",children:"API Reference"})," for more all options."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},6746:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/localhost_3500_resource_audit_logs-8996765a6d534b48c3e52b9949e4cc89.png"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(6540);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);