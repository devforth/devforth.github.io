"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[6896],{39653:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"tutorial/Plugins/bulk-ai-flow","title":"Bulk AI Flow","description":"This plugin allows filling fields in records based on data from other fields using AI.","source":"@site/docs/tutorial/07-Plugins/17-bulk-ai-flow.md","sourceDirName":"tutorial/07-Plugins","slug":"/tutorial/Plugins/bulk-ai-flow","permalink":"/docs/tutorial/Plugins/bulk-ai-flow","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":17,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Email Invite","permalink":"/docs/tutorial/Plugins/email-invite"},"next":{"title":"Plugin development guide","permalink":"/docs/tutorial/Advanced/plugin-development"}}');var t=i(74848),d=i(28453);const s={},l="Bulk AI Flow",r={},o=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,d.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"bulk-ai-flow",children:"Bulk AI Flow"})}),"\n",(0,t.jsx)(e.p,{children:"This plugin allows filling fields in records based on data from other fields using AI."}),"\n",(0,t.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(e.p,{children:"To install the plugin:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"npm install @adminforth/bulk-ai-flow --save\n"})}),"\n",(0,t.jsx)(e.p,{children:"You'll also need an image vision adapter:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"npm install @adminforth/image-vision-adapter-openai --save\n"})}),"\n",(0,t.jsx)(e.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(e.p,{children:["Add a column for storing the URL or path to the image in the database, add this statement to the ",(0,t.jsx)(e.code,{children:"./schema.prisma"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",metastring:'title="./schema.prisma"',children:"model apartments {\n  id                String     @id\n  created_at        DateTime?\n  title             String\n  square_meter      Float?\n  price             Decimal\n  number_of_rooms   Int?\n  description       String?\n  country           String?\n  listed            Boolean\n  realtor_id        String?\n//diff-add\n  image_url         String?\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"Migrate prisma schema:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"npm run makemigration -- --name add-apartment-image-url ; npm run migrate:local\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["Add credentials in your ",(0,t.jsx)(e.code,{children:".env.local"})," file:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",metastring:'title=".env"',children:"...\n\n//diff-add\nOPENAI_API_KEY=your_secret_openai_key\n\n...\n"})}),"\n",(0,t.jsxs)(e.p,{children:["Add column to ",(0,t.jsx)(e.code,{children:"aparts"})," resource configuration:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",metastring:'title="./resources/apartments.ts"',children:"//diff-add\nimport BulkAiFlowPlugin  from '@adminforth/bulk-ai-flow';\n//diff-add\nimport AdminForthImageVisionAdapterOpenAi from '@adminforth/image-vision-adapter-openai';\n\nexport const admin = new AdminForth({\n  ...\n  resourceId: 'aparts',\n  columns: [\n    ...\n//diff-add\n    {\n//diff-add\n        name: 'image_url',\n//diff-add\n        label: 'Image',\n//diff-add\n        showIn: { list: false, create: true, edit: true},\n//diff-add\n    }\n    ...\n  ],\n  plugins: [\n    ...\n  //diff-add\n    plugins: [\n    //diff-add\n    new BulkAiFlowPlugin({\n    //diff-add\n      actionName: 'Analize',\n    //diff-add\n      confirmMessage: 'Are you sure you want to analyze selected apartments?',\n    //diff-add\n      attachFiles: async ({ record }: { record: any }) => {\n    //diff-add\n        return [record.image_url];\n    //diff-add\n      },\n    //diff-add\n      adapter: new AdminForthImageVisionAdapterOpenAi(\n    //diff-add\n        {\n    //diff-add\n          openAiApiKey:  process.env.OPENAI_API_KEY as string,\n    //diff-add\n          model: 'gpt-4.1-mini',\n    //diff-add\n        }\n    //diff-add\n      ),\n    //diff-add\n      outputFields: [{ \n    //diff-add\n        'description': 'describe what is in the image, also include fact that price is {{price}}', \n    //diff-add\n        'country': 'In which country it can be located?', \n    //diff-add\n        'number_of_rooms': 'How many rooms are in the apartment? If you do not know, just guess',\n    //diff-add\n        'square_meter': 'What is the square of the apartment in square meters? If you do not know, just guess',\n    //diff-add\n        'listed': 'Is the apartment should be listed for sale? If you do not know, just guess, return boolean value',\n    //diff-add\n      }],\n    //diff-add\n    }),\n    //diff-add\n  ],\n\n  \n  ...\n\n});\n"})}),"\n",(0,t.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Select fields you want to fill"}),"\n",(0,t.jsx)(e.li,{children:"Click on the three dots menu"}),"\n",(0,t.jsxs)(e.li,{children:["Click analyze\n",(0,t.jsx)(e.img,{alt:"alt text",src:i(65878).A+"",width:"2298",height:"439"})]}),"\n",(0,t.jsx)(e.li,{children:"Wait for finish analyze"}),"\n",(0,t.jsxs)(e.li,{children:["Check and edit result\n",(0,t.jsx)(e.img,{alt:"alt text",src:i(47501).A+"",width:"1744",height:"836"})]}),"\n",(0,t.jsxs)(e.li,{children:["Save changhes\n",(0,t.jsx)(e.img,{alt:"alt text",src:i(7556).A+"",width:"2304",height:"418"})]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,d.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},65878:(n,e,i)=>{i.d(e,{A:()=>a});const a=i.p+"assets/images/Bulk-vision-1-166513132e454cea427469361856fb27.png"},47501:(n,e,i)=>{i.d(e,{A:()=>a});const a=i.p+"assets/images/Bulk-vision-2-0e695786d4dfac65fec730c6a3aa8d8d.png"},7556:(n,e,i)=>{i.d(e,{A:()=>a});const a=i.p+"assets/images/Bulk-vision-3-034f3705373d52b1b3a3ec20828b7b48.png"},28453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>l});var a=i(96540);const t={},d=a.createContext(t);function s(n){const e=a.useContext(d);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),a.createElement(d.Provider,{value:e},n.children)}}}]);