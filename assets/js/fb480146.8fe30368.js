"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[3388],{1357:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var t=i(4848),r=i(8453);const s={},a="Rich editor",o={id:"tutorial/Plugins/RichEditor",title:"Rich editor",description:"Under the hood this plugin uses Quill. Quill is a free, open source WYSIWYG editor built for the modern web.",source:"@site/docs/tutorial/07-Plugins/04-RichEditor.md",sourceDirName:"tutorial/07-Plugins",slug:"/tutorial/Plugins/RichEditor",permalink:"/docs/tutorial/Plugins/RichEditor",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ForeignInlineList",permalink:"/docs/tutorial/Plugins/ForeignInlineList"},next:{title:"Upload",permalink:"/docs/tutorial/Plugins/upload"}},d={},l=[{value:"Usage",id:"usage",level:2},{value:"Completion",id:"completion",level:2},{value:"Imges in Rich editor",id:"imges-in-rich-editor",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"rich-editor",children:"Rich editor"}),"\n",(0,t.jsxs)(n.p,{children:["Under the hood this plugin uses ",(0,t.jsx)(n.a,{href:"https://quilljs.com/",children:"Quill"}),". Quill is a free, open source WYSIWYG editor built for the modern web."]}),"\n",(0,t.jsx)(n.p,{children:"This plugin allows you to use Quill editor in your AdminForth application."}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:"First, install the plugin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i @adminforth/rich-editor --save\n"})}),"\n",(0,t.jsx)(n.p,{children:"Import plugin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="./resources/apartments.ts"',children:'import RichEditorPlugin from "@adminforth/rich-editor";\n'})}),"\n",(0,t.jsx)(n.p,{children:"Now instantiate the plugin and add it to the configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="./resources/apartments.ts"',children:"\n{\n  ...\n  resourceId: 'aparts',\n  columns: [\n    ...\n    {\n      name: 'description',\n//diff-add\n      type: AdminForthDataTypes.TEXT, // like plain AdminForthDataTypes.TEXT but renders HTML in show/list views\n      components: {\n        show: \"@/renderers/RichText.vue\",\n        list: \"@/renderers/RichText.vue\",\n      },\n      ...\n    }\n    ...\n  ],\n  ...\n  plugins: [\n    ...\n//diff-add\n    new RichEditorPlugin({\n//diff-add\n      htmlFieldName: 'description',\n//diff-add\n    }),\n    ...\n  ],\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Now you can see Quill editor in the ",(0,t.jsx)(n.code,{children:"description"})," field in the edit view:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"alt text",src:i(326).A+"",width:"3670",height:"2064"})}),"\n",(0,t.jsx)(n.h1,{id:"multiple-editors-in-one-resource",children:"Multiple editors in one resource"}),"\n",(0,t.jsx)(n.p,{children:"If you need multiple fields in one resource which happens rarely, just add multiple instances of the plugin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="./resources/apartments.ts"',children:"{\n  ...\n  resourceId: 'promotion',\n  columns: [\n    ...\n    {\n      name: 'short_description',\n      type: AdminForthDataTypes.TEXT,\n      components: {\n        list: \"@/renderers/RichText.vue\",\n        show: \"@/renderers/RichText.vue\",\n      }\n      ...\n    },\n    {\n      name: 'full_description',\n      type: AdminForthDataTypes.TEXT,\n      components: {\n        list: \"@/renderers/RichText.vue\",\n        show: \"@/renderers/RichText.vue\",\n      }\n      ...\n    }\n    ...\n  ],\n  ...\n  plugins: [\n    ...\n    new QuillEditorPlugin({\n      htmlField: 'short_description',\n    }),\n    new QuillEditorPlugin({\n      htmlField: 'full_description',\n    }),\n    ...\n  ],\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"completion",children:"Completion"}),"\n",(0,t.jsx)(n.p,{children:"First, install the completion adapter:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i @adminforth/completion-adapter-open-ai-chat-gpt --save\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To get completion suggestions for the text in the editor, you can use the ",(0,t.jsx)(n.code,{children:"completion"})," option. This option is an object with the following properties:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",metastring:'title="./resources/apartments.ts"',children:"//diff-add\n  import CompletionAdapterOpenAIChatGPT from \"@adminforth/completion-adapter-open-ai-chat-gpt\";\n\n  new RichEditorPlugin({\n      htmlFieldName: 'description',\n//diff-add\n      completion: {\n//diff-add\n        adapter: new CompletionAdapterOpenAIChatGPT({\n//diff-add\n          openAiApiKey: process.env.OPENAI_API_KEY as string,\n//diff-add\n          model: 'gpt-4o', //gpt-4o-mini is a default (cheapest one)\n          expert: {\n//diff-add\n            temperature: 0.7 //Model temperature, default 0.7\n//diff-add\n          }\n//diff-add\n        }),\n//diff-add\n        expert: {\n//diff-add\n          debounceTime: 250,\n//diff-add\n        }\n//diff-add\n      }\n    }),\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"alt text",src:i(1442).A+"",width:"1400",height:"1050"})}),"\n",(0,t.jsx)(n.h3,{id:"imges-in-rich-editor",children:"Imges in Rich editor"}),"\n",(0,t.jsx)(n.p,{children:"First, you need to create resource for images:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-prisma",metastring:'title="schema.prisma"',children:"model description_image {\n    id          String   @id\n    created_at  DateTime\n    resource_id String\n    record_id   String\n    image_path  String\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run makemigration -- --name add_description_image ; npm run migrate:local\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i @adminforth/upload --save\nnpm i @adminforth/storage-adapter-local --save\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="./resources/description_images.ts"',children:'import AdminForthStorageAdapterLocalFilesystem from "@adminforth/storage-adapter-local";\nimport { AdminForthResourceInput } from "adminforth";\nimport UploadPlugin from "@adminforth/upload";\nimport { v1 as uuid } from "uuid";\n\nexport default {\n  dataSource: "maindb",\n  table: "description_image",\n  resourceId: "description_images",\n  label: "Description images",\n  columns: [\n    {\n      name: "id",\n      primaryKey: true,\n      required: false,\n      fillOnCreate: ({ initialRecord }: any) => uuid(),\n      showIn: {\n        create: false,\n      },\n    },\n    {\n      name: "created_at",\n      required: false,\n      fillOnCreate: ({ initialRecord }: any) => new Date().toISOString(),\n      showIn: {\n        create: false,\n      },\n    },\n    { name: "resource_id", required: false },\n    { name: "record_id", required: false },\n    { name: "image_path", required: false },\n  ],\n  plugins: [\n    new UploadPlugin({\n      pathColumnName: "image_path",\n      \n      // rich editor plugin supports only \'public-read\' ACL images for SEO purposes (instead of presigned URLs which change every time)\n      storageAdapter: new AdminForthStorageAdapterLocalFilesystem({\n        fileSystemFolder: "./db/uploads/description_images", // folder where files will be stored on disk\n        adminServeBaseUrl: "static/source", // the adapter not only stores files, but also serves them for HTTP requests\n        mode: "public", // public if all files should be accessible from the web, private only if could be accesed by temporary presigned links\n        signingSecret: process.env.ADMINFORTH_SECRET, // secret used to generate presigned URLs\n      }),\n  \n      allowedFileExtensions: [\n        "jpg",\n        "jpeg",\n        "png",\n        "gif",\n        "webm",\n        "exe",\n        "webp",\n      ],\n      maxFileSize: 1024 * 1024 * 20, // 5MB\n\n\n      filePath: ({ originalFilename, originalExtension, contentType }) =>\n        `description_images/${new Date().getFullYear()}/${uuid()}/${originalFilename}.${originalExtension}`,\n\n      preview: {\n        // Used to display preview (if it is image) in list and show views instead of just path\n        // previewUrl: ({s3Path}) => `https://tmpbucket-adminforth.s3.eu-central-1.amazonaws.com/${s3Path}`,\n        // show image preview instead of path in list view\n        // showInList: false,\n      },\n    }),\n  ],\n} as AdminForthResourceInput;\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Next, add new resource to ",(0,t.jsx)(n.code,{children:"index.ts"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="./index.ts"',children:"import descriptionImage from './resources/description_images.js';\n\n...\n\n  resources: [\n    usersResource,\n    apartments,\n    // diff-add\n    descriptionImage\n  ],\n"})}),"\n",(0,t.jsx)(n.p,{children:"Next, add attachments to RichEditor plugin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:'title="./resources/apartments.ts"',children:'import RichEditorPlugin from \'@adminforth/rich-editor\';\n\n// ... existing resource configuration ...\n\nnew RichEditorPlugin({\n  htmlFieldName: \'description\',\n  attachments: {\n    attachmentResource: "description_images",\n    attachmentFieldName: "image_path",\n    attachmentRecordIdFieldName: "record_id",\n    attachmentResourceIdFieldName: "resource_id",\n  }\n})\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1442:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/gptDemo-7f2508ca0024430341592a6d40cf76c8.gif"},326:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/image-2-f1e856fbaa6202d9e8fde0165763c5eb.png"},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);