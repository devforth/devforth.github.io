"use strict";(self.webpackChunkadminforth=self.webpackChunkadminforth||[]).push([[2728],{4101:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=t(4848),s=t(8453);const r={slug:"ai-blog",title:"AI-Assisted blog with AdminForth and Nuxt in a minutes",authors:"ivanb",tags:["nuxt","chatgpt"]},a=void 0,o={permalink:"/blog/ai-blog",source:"@site/blog/2024-10-01-ai-blog/index.md",title:"AI-Assisted blog with AdminForth and Nuxt in a minutes",description:"Many developers today are using copilots to write code faster and think less about syntax.",date:"2024-10-01T00:00:00.000Z",tags:[{inline:!0,label:"nuxt",permalink:"/blog/tags/nuxt"},{inline:!1,label:"ChatGPT",permalink:"/blog/tags/chatgpt",description:"ChatGPT is a conversational AI model that can generate human-like responses to text inputs."}],readingTime:3.445,hasTruncateMarker:!1,authors:[{name:"Ivan Borshcho",title:"Maintainer of AdminForth",url:"https://github.com/ivictbor",imageURL:"https://avatars.githubusercontent.com/u/1838656?v=4",key:"ivanb"}],frontMatter:{slug:"ai-blog",title:"AI-Assisted blog with AdminForth and Nuxt in a minutes",authors:"ivanb",tags:["nuxt","chatgpt"]},unlisted:!1,nextItem:{title:"Chat-GPT plugin to co-write texts and strings",permalink:"/blog/chatgpt-plugin"}},l={authorsImageUrls:[void 0]},c=[{value:"Prerequirements",id:"prerequirements",level:2},{value:"Step 1: Create a new AdminForth project",id:"step-1-create-a-new-adminforth-project",level:2},{value:"Step 2: Prepare environment",id:"step-2-prepare-environment",level:2},{value:"OpenAI",id:"openai",level:3},{value:"S3",id:"s3",level:3},{value:"Create .env file in project directory",id:"create-env-file-in-project-directory",level:3},{value:"Step 3: Initialize database",id:"step-3-initialize-database",level:2},{value:"Step 4: Setting up AdminForth",id:"step-4-setting-up-adminforth",level:2},{value:"Step 5: Create resources",id:"step-5-create-resources",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Many developers today are using copilots to write code faster and think less about syntax."}),"\n",(0,i.jsx)(n.p,{children:"But what about writing plain text? For example blogs and micro-blogs? Sometimes you want to share your progress and thoughts but you are lazy for typing. Then you can give a try to AI-assisted blogging. Our Open-Source AdminForth framework has couple of new AI-capable plugins to write text and generate images."}),"\n",(0,i.jsx)(n.p,{children:"For AI plugins are backed by OpenAI API, but their architecture allows to be easily extended for other AI providers once OpenAI competitors will reach the same or better level of quality."}),"\n",(0,i.jsx)(n.p,{children:"Here we will suggest you simple as 1-2-3 steps to build and host a blog with AI assistant which will help you to write posts."}),"\n",(0,i.jsx)(n.p,{children:"Our tech stack will include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://nuxt.com/",children:"Nuxt.js"})," - SEO-friendly page rendering framework"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://adminforth.dev/",children:"AdminForth"})," - Admin panel framework for creating posts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://adminforth.dev/docs/tutorial/Plugins/RichEditor/",children:"AdminForth RichEditor plugin"})," - WYSIWYG editor with AI assistant in Copilot style"]}),"\n",(0,i.jsx)(n.li,{children:"Node and typescript"}),"\n",(0,i.jsx)(n.li,{children:"Prisma for migrations"}),"\n",(0,i.jsx)(n.li,{children:"SQLite for database, though you can easily switch it to Postgres or MongoDB"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"prerequirements",children:"Prerequirements"}),"\n",(0,i.jsxs)(n.p,{children:["We will use Node v20, if you not have it installed, we recommend ",(0,i.jsx)(n.a,{href:"https://github.com/nvm-sh/nvm?tab=readme-ov-file#install--update-script",children:"NVM"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nvm install 20\nnvm alias default 20\nnvm use 20\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-1-create-a-new-adminforth-project",children:"Step 1: Create a new AdminForth project"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir ai-blog\ncd ai-blog\nnpm init -y\nnpm install adminforth @adminforth/upload @adminforth/rich-editor express slugify @types/express typescript tsx @types/node  --save-dev\nnpx --yes tsc --init --module ESNext --target ESNext\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-2-prepare-environment",children:"Step 2: Prepare environment"}),"\n",(0,i.jsx)(n.h3,{id:"openai",children:"OpenAI"}),"\n",(0,i.jsxs)(n.p,{children:["To allocate OpenAI API key, go to ",(0,i.jsx)(n.a,{href:"https://platform.openai.com/",children:"https://platform.openai.com/"}),", open Dashboard -> API keys -> Create new secret key."]}),"\n",(0,i.jsx)(n.h3,{id:"s3",children:"S3"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Go to ",(0,i.jsx)(n.a,{href:"https://aws.amazon.com",children:"https://aws.amazon.com"})," and login."]}),"\n",(0,i.jsxs)(n.li,{children:["Go to Services -> S3 and create a bucket. Put in bucket name e.g. ",(0,i.jsx)(n.code,{children:"my-ai-blog-bucket"}),".\nLeave all settings unchanged (ACL Disabled, Block all public access - checked)"]}),"\n",(0,i.jsx)(n.li,{children:"Go to bucket settings, Permissions, scroll down to Cross-origin resource sharing (CORS) and put in the following configuration:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "AllowedHeaders": [\n            "*"\n        ],\n        "AllowedMethods": [\n            "PUT"\n        ],\n        "AllowedOrigins": [\n            "http://localhost:3500"\n        ],\n        "ExposeHeaders": []\n    }\n]\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u261d\ufe0f In AllowedOrigins add all your domains. For example if you will serve blog and admin on ",(0,i.jsx)(n.code,{children:"https://example.com/"})," you should add\n",(0,i.jsx)(n.code,{children:'"https://example.com"'})," to AllowedOrigins:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n     "https://example.com",\n     "http://localhost:3500"\n]\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Every character matters, so don't forget to add ",(0,i.jsx)(n.code,{children:"http://"})," or ",(0,i.jsx)(n.code,{children:"https://"}),"!"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Go to Services -> IAM and create a new user. Put in user name e.g. ",(0,i.jsx)(n.code,{children:"my-ai-blog-bucket"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Attach existing policies directly -> ",(0,i.jsx)(n.code,{children:"AmazonS3FullAccess"}),". Go to your user -> ",(0,i.jsx)(n.code,{children:"Add permissions"})," -> ",(0,i.jsx)(n.code,{children:"Attach policies directly"})," -> ",(0,i.jsx)(n.code,{children:"AmazonS3FullAccess"})]}),"\n",(0,i.jsxs)(n.li,{children:["Go to Security credentials and create a new access key. Save ",(0,i.jsx)(n.code,{children:"Access key ID"})," and ",(0,i.jsx)(n.code,{children:"Secret access key"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"create-env-file-in-project-directory",children:"Create .env file in project directory"}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:".env"})," file with the following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=".env"',children:"DATABASE_URL=file:./db.sqlite\nADMINFORTH_SECRET=123\nNODE_ENV=development\n# Your OpenAI API key for ChatGPT completions\nOPENAI_API_KEY=...\nAWS_ACCESS_KEY_ID=your_access_key_id\nAWS_SECRET_ACCESS_KEY=your_secret_access_key\nAWS_S3_BUCKET=my-ai-blog-bucket\nAWS_S3_REGION=us-east-1\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-3-initialize-database",children:"Step 3: Initialize database"}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"./schema.prisma"})," and put next content there:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="./schema.prisma" ',children:'generator client {\n  provider = "prisma-client-js"\n}\n\ndatasource db {\n  provider = "sqlite"\n  url      = env("DATABASE_URL")\n}\n\nmodel User {\n  id           String     @id\n  createdAt    DateTime \n  email        String   @unique\n  avatar       String?\n  publicName   String?\n  passwordHash String\n  posts        Post[]\n}\n\nmodel Post {\n  id          String     @id\n  createdAt   DateTime \n  title       String\n  slug        String\n  picture     String?\n  content     String\n  published   Boolean  \n  author      User?    @relation(fields: [authorId], references: [id])\n  authorId    String?\n  contentImages ContentImage[]\n}\n\nmodel ContentImage {\n  id         String     @id\n  createdAt  DateTime \n  img        String\n  postId     String\n  resourceId String\n  post       Post      @relation(fields: [postId], references: [id])\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Create database using ",(0,i.jsx)(n.code,{children:"prisma migrate"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx -y prisma migrate dev --name init\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-4-setting-up-adminforth",children:"Step 4: Setting up AdminForth"}),"\n",(0,i.jsxs)(n.p,{children:["Open ",(0,i.jsx)(n.code,{children:"package.json"}),", set ",(0,i.jsx)(n.code,{children:"type"})," to ",(0,i.jsx)(n.code,{children:"module"})," and add ",(0,i.jsx)(n.code,{children:"start"})," script:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="./package.json"',children:'{\n  ...\n//diff-add\n  "type": "module",\n  "scripts": {\n    ...\n//diff-add\n    "start": "tsx watch --env-file=.env index.ts"\n  },\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"index.ts"})," file in root directory with following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="./index.ts"'})}),"\n",(0,i.jsx)(n.h2,{id:"step-5-create-resources",children:"Step 5: Create resources"}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"users.res.ts"})," file in root directory with following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="./users.res.ts"'})}),"\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"posts.res.ts"})," file in root directory with following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="./posts.res.ts"',children:"\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Init Nuxt project in ",(0,i.jsx)(n.code,{children:"front"})," directory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx -y nuxi@latest init front\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);