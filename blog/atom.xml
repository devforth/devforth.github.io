<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://adminforth.dev/blog/</id>
    <title>Vue &amp; Node admin panel framework Blog</title>
    <updated>2024-10-01T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://adminforth.dev/blog/"/>
    <subtitle>Vue &amp; Node admin panel framework Blog</subtitle>
    <icon>https://adminforth.dev/img/favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[Build blog with Copilot-alike AI assistant within a minutes]]></title>
        <id>https://adminforth.dev/blog/ai-blog/</id>
        <link href="https://adminforth.dev/blog/ai-blog/"/>
        <updated>2024-10-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Many developers today are using copilots to write code much faster with less keystrokes.]]></summary>
        <content type="html"><![CDATA[<p>Many developers today are using copilots to write code much faster with less keystrokes.</p>
<p>But what about writing plain text? For example blogs and micro-blogs? Sometimes you want to share your progress and thoughts but you are lazy for typing. AI can help you with it even better then in coding - you just make a first move it completes.</p>
<p>Here we will suggest you simple as 1-2-3 steps to build and host a blog with AI assistant which will help you to write posts.</p>
<p>Our tech stack will include:</p>
<ul>
<li><a href="https://nuxt.com/" target="_blank" rel="noopener noreferrer">Nuxt.js</a> - SEO-friendly page rendering framework</li>
<li><a href="https://adminforth.dev/" target="_blank" rel="noopener noreferrer">AdminForth</a> - Admin panel framework for creating posts</li>
<li><a href="https://adminforth.dev/docs/tutorial/Plugins/RichEditor/" target="_blank" rel="noopener noreferrer">AdminForth RichEditor plugin</a> - WYSIWYG editor with AI assistant in Copilot style</li>
<li>Node and typescript</li>
<li>Prisma for migrations</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequirements">Prerequirements<a class="hash-link" aria-label="Direct link to Prerequirements" title="Direct link to Prerequirements" href="https://adminforth.dev/blog/ai-blog/#prerequirements">​</a></h2>
<p>We will use Node v 20, if you not have it installed, please install it with <a href="https://github.com/nvm-sh/nvm?tab=readme-ov-file#install--update-script" target="_blank" rel="noopener noreferrer">NVM</a></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">nvm </span><span class="token function" style="color:#e6db74">install</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">nvm </span><span class="token builtin class-name" style="color:#e6db74">alias</span><span class="token plain"> default </span><span class="token number" style="color:#ae81ff">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">nvm use </span><span class="token number" style="color:#ae81ff">20</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-create-a-new-adminforth">Step 1: Create a new AdminForth<a class="hash-link" aria-label="Direct link to Step 1: Create a new AdminForth" title="Direct link to Step 1: Create a new AdminForth" href="https://adminforth.dev/blog/ai-blog/#step-1-create-a-new-adminforth">​</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">mkdir</span><span class="token plain"> ai-blog</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token builtin class-name" style="color:#e6db74">cd</span><span class="token plain"> ai-blog</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">npm</span><span class="token plain"> init </span><span class="token parameter variable" style="color:#f8f8f2">-y</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">npm</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">install</span><span class="token plain"> adminforth express @types/express typescript tsx @types/node --save-dev</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">npx </span><span class="token parameter variable" style="color:#f8f8f2">--yes</span><span class="token plain"> tsc </span><span class="token parameter variable" style="color:#f8f8f2">--init</span><span class="token plain"> </span><span class="token parameter variable" style="color:#f8f8f2">--module</span><span class="token plain"> ESNext </span><span class="token parameter variable" style="color:#f8f8f2">--target</span><span class="token plain"> ESNext</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-prepare-environment">Step 2: Prepare environment<a class="hash-link" aria-label="Direct link to Step 2: Prepare environment" title="Direct link to Step 2: Prepare environment" href="https://adminforth.dev/blog/ai-blog/#step-2-prepare-environment">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="openai">OpenAI<a class="hash-link" aria-label="Direct link to OpenAI" title="Direct link to OpenAI" href="https://adminforth.dev/blog/ai-blog/#openai">​</a></h3>
<p>To allocate OpenAI API key, go to <a href="https://platform.openai.com/" target="_blank" rel="noopener noreferrer">https://platform.openai.com/</a>, open Dashboard -&gt; API keys -&gt; Create new secret key.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="s3">S3<a class="hash-link" aria-label="Direct link to S3" title="Direct link to S3" href="https://adminforth.dev/blog/ai-blog/#s3">​</a></h3>
<ol>
<li>Go to <a href="https://aws.amazon.com/" target="_blank" rel="noopener noreferrer">https://aws.amazon.com</a> and login.</li>
<li>Go to Services -&gt; S3 and create a bucket. Put in bucket name e.g. <code>my-ai-blog-bucket</code>.
Leave all settings unchanged (ACL Disabled, Block all public access - checked)</li>
<li>Go to bucket settings, Permissions, scroll down to Cross-origin resource sharing (CORS) and put in the following configuration:</li>
</ol>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">[</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "AllowedHeaders": [</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            "*"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        ],</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "AllowedMethods": [</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            "PUT"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        ],</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "AllowedOrigins": [</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            "http://localhost:3500"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        ],</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "ExposeHeaders": []</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p>☝️ In AllowedOrigins add all your domains. For example if you will serve blog and admin on <code>https://example.com/</code> you should add
<code>"https://example.com"</code> to AllowedOrigins:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">[</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">     "https://example.com",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">     "http://localhost:3500"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Every character matters, so don't forget to add <code>http://</code> or <code>https://</code>!</p>
</blockquote>
<ol start="4">
<li>Go to Services -&gt; IAM and create a new user. Put in user name e.g. <code>my-ai-blog-bucket</code>.</li>
<li>Attach existing policies directly -&gt; <code>AmazonS3FullAccess</code>. Go to your user -&gt; <code>Add permissions</code> -&gt; <code>Attach policies directly</code> -&gt; <code>AmazonS3FullAccess</code></li>
<li>Go to Security credentials and create a new access key. Save <code>Access key ID</code> and <code>Secret access key</code>.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-env-file-in-project-directory">Create .env file in project directory<a class="hash-link" aria-label="Direct link to Create .env file in project directory" title="Direct link to Create .env file in project directory" href="https://adminforth.dev/blog/ai-blog/#create-env-file-in-project-directory">​</a></h3>
<p>Create <code>.env</code> file with the following content:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">.env</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token assign-left variable" style="color:#f8f8f2">DATABASE_URL</span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain">file:./db.sqlite</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token assign-left variable" style="color:#f8f8f2">ADMINFORTH_SECRET</span><span class="token operator" style="color:#66d9ef">=</span><span class="token number" style="color:#ae81ff">123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token assign-left variable" style="color:#f8f8f2">NODE_ENV</span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain">development</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Your OpenAI API key for ChatGPT completions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token assign-left variable" style="color:#f8f8f2">OPENAI_API_KEY</span><span class="token operator" style="color:#66d9ef">=</span><span class="token punctuation" style="color:#f8f8f2">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token assign-left variable" style="color:#f8f8f2">AWS_ACCESS_KEY_ID</span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain">your_access_key_id</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token assign-left variable" style="color:#f8f8f2">AWS_SECRET_ACCESS_KEY</span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain">your_secret_access_key</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token assign-left variable" style="color:#f8f8f2">AWS_S3_BUCKET</span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain">my-ai-blog-bucket</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token assign-left variable" style="color:#f8f8f2">AWS_S3_REGION</span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain">us-east-1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-initialize-database">Step 3: Initialize database<a class="hash-link" aria-label="Direct link to Step 3: Initialize database" title="Direct link to Step 3: Initialize database" href="https://adminforth.dev/blog/ai-blog/#step-3-initialize-database">​</a></h2>
<p>Create <code>./schema.prisma</code> and put next content there:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">./schema.prisma</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">generator client </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  provider = "prisma</span><span class="token punctuation" style="color:#f8f8f2">-</span><span class="token plain">client</span><span class="token punctuation" style="color:#f8f8f2">-</span><span class="token plain">js"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">datasource db </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  provider = "sqlite"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  url      = env("DATABASE_URL")</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">model User </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  id           String     @id</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  createdAt    DateTime </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  email        String   @unique</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  avatar       String</span><span class="token punctuation" style="color:#f8f8f2">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  publicName   String</span><span class="token punctuation" style="color:#f8f8f2">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  passwordHash String</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  posts        Post</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">model Post </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  id          String     @id</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  createdAt   DateTime </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  title       String</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  slug        String</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  picture     String</span><span class="token punctuation" style="color:#f8f8f2">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  content     String</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  published   Boolean  </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">author      User?    @relation(fields</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">authorId</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token key atrule">references</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">id</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  authorId    String</span><span class="token punctuation" style="color:#f8f8f2">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  contentImages ContentImage</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">model ContentImage </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  id         String     @id</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  createdAt  DateTime </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  img        String</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  postId     String</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  resourceId String</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">post       Post      @relation(fields</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">postId</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token key atrule">references</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">id</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Create database using <code>prisma migrate</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">npx </span><span class="token parameter variable" style="color:#f8f8f2">-y</span><span class="token plain"> prisma migrate dev </span><span class="token parameter variable" style="color:#f8f8f2">--name</span><span class="token plain"> init</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-setting-up-adminforth">Step 4: Setting up AdminForth<a class="hash-link" aria-label="Direct link to Step 4: Setting up AdminForth" title="Direct link to Step 4: Setting up AdminForth" href="https://adminforth.dev/blog/ai-blog/#step-4-setting-up-adminforth">​</a></h2>
<p>Open <code>package.json</code>, set <code>type</code> to <code>module</code> and add <code>start</code> script:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">./package.json</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">{</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  ...</span><br></span><span class="token-line code-block-diff-add-line" style="color:#f8f8f2"><span class="token plain">  "type": "module",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  "scripts": {</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    ...</span><br></span><span class="token-line code-block-diff-add-line" style="color:#f8f8f2"><span class="token plain">    "start": "tsx watch --env-file=.env index.ts"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Create <code>index.ts</code> file in root directory with following content:</p>
<pre tabindex="0" class="codeBlockStandalone_MEMb thin-scrollbar language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><code class="codeBlockLines_e6Vv"></code></pre>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-5-create-resources">Step 5: Create resources<a class="hash-link" aria-label="Direct link to Step 5: Create resources" title="Direct link to Step 5: Create resources" href="https://adminforth.dev/blog/ai-blog/#step-5-create-resources">​</a></h2>
<p>Create <code>users.res.ts</code> file in root directory with following content:</p>
<pre tabindex="0" class="codeBlockStandalone_MEMb thin-scrollbar language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><code class="codeBlockLines_e6Vv"></code></pre>
<p>Create <code>posts.res.ts</code> file in root directory with following content:</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">./posts.res.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Init Nuxt project in <code>front</code> directory:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">npx </span><span class="token parameter variable" style="color:#f8f8f2">-y</span><span class="token plain"> nuxi@latest init front</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Ivan Borshcho</name>
            <uri>https://github.com/ivictbor</uri>
        </author>
        <category label="nuxt" term="nuxt"/>
        <category label="ChatGPT" term="ChatGPT"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chat-GPT plugin to co-write texts and strings]]></title>
        <id>https://adminforth.dev/blog/chatgpt-plugin/</id>
        <link href="https://adminforth.dev/blog/chatgpt-plugin/"/>
        <updated>2024-08-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Couple of days ago we released a plugin which allows you to co-write texts and strings with the AI.]]></summary>
        <content type="html"><![CDATA[<p>Couple of days ago we released a plugin which allows you to co-write texts and strings with the AI.</p>
<p>Today LLM is already a must tool to speed-up writing, brainstorming, or generating ideas.</p>
<p>Here is how it looks in action:</p>
<p><img decoding="async" loading="lazy" alt="alt text" src="https://adminforth.dev/assets/images/demoChatGpt-cb045146add2758d6fb571efef680e80.gif" width="1999" height="1499" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="simple-controls">Simple controls<a class="hash-link" aria-label="Direct link to Simple controls" title="Direct link to Simple controls" href="https://adminforth.dev/blog/chatgpt-plugin/#simple-controls">​</a></h2>
<p>To control plugin we use our open-source <a href="https://github.com/devforth/vue-suggestion-input" target="_blank" rel="noopener noreferrer">vue-suggestion-input</a>.
It allows to:</p>
<ul>
<li>Complete suggestion with <code>Tab</code>.</li>
<li>Complete word with <code>Ctrl + Right</code>.</li>
<li>Regenerate suggestion with <code>Ctrl + Down</code>.</li>
<li>On mobile suggestion word is accepted with swipe right on the screen.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="want-to-try-it-out">Want to try it out?<a class="hash-link" aria-label="Direct link to Want to try it out?" title="Direct link to Want to try it out?" href="https://adminforth.dev/blog/chatgpt-plugin/#want-to-try-it-out">​</a></h2>
<p>Go to a <a href="https://demo.adminforth.dev/resource/aparts/create" target="_blank" rel="noopener noreferrer">Live Demo</a> and start creating a new apartment record. Type in the <code>title</code> and <code>description</code> field and see how the plugin works.</p>
<p>If you want to try it out on your hello-wrold admin panel, then, first follow the instructions in the <a href="https://adminforth.dev/docs/tutorial/gettingStarted" target="_blank" rel="noopener noreferrer">Getting Started</a> tutorial to create a new project. To install the plugin, then, follow the instructions in the <a href="https://adminforth.dev/docs/tutorial/Plugins/chat-gpt" target="_blank" rel="noopener noreferrer">Chat-GPT plugin page</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="context-matters-but-with-sane-limit">Context matters, but with sane limit!<a class="hash-link" aria-label="Direct link to Context matters, but with sane limit!" title="Direct link to Context matters, but with sane limit!" href="https://adminforth.dev/blog/chatgpt-plugin/#context-matters-but-with-sane-limit">​</a></h2>
<p>When the prompts are called, the plugin passes to LLM not only previous text in current field to complete, but also passes values of other fields in record edited. This allows to generate more relevant completions.
For example if you have a record with fields <code>title</code> and <code>description</code>, and you are editing <code>description</code>, the plugin will pass <code>title</code> value to LLM as well.</p>
<p>But obviously longer prompts lead to higher LLM costs and longer response times. That is why we created mechanics to limit the length of prompts passed to LLM.</p>
<p>Limitation is done on 2 levels:</p>
<ul>
<li>plugin settings have <code>expert.promptInputLimit</code> - limits length of edited field passed to LLM. If field is longer, it will pass only last <code>promptInputLimit</code> characters.</li>
<li>plugin settings have <code>expert.recordContext</code> which defines limits for other fields in record. Each field can't be longer then <code>maxFieldLength</code> (default is 300). If field is longer then it is split to parts <code>splitParts</code> and they are joined with '...'. Also if there are more non-empty fields then <code>maxFields</code>, then plugin selects top longest <code>maxFields</code> fields to pass to LLM.</li>
</ul>
<p>In the end, total number of characters passed to LLM is limited by formula:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">promptInputLimit + maxFields * maxFieldLength + &lt;LLM request static part&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Where <code>&lt;LLM request static part&gt;</code> is a constant part of request to LLM which looks like this:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">Continue writing for text/string field "${this.options.fieldName}" in the table "${resLabel}"\n</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Record has values for the context: ${inputContext}\n</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Current field value: ${currentVal}\n</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Don't talk to me. Just write text. No quotes. Don't repeat current field value, just write completion\n</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="model-configuration">Model configuration<a class="hash-link" aria-label="Direct link to Model configuration" title="Direct link to Model configuration" href="https://adminforth.dev/blog/chatgpt-plugin/#model-configuration">​</a></h2>
<p>Of course you can define which model to use for completion. By default plugin uses <code>gpt-4o-mini</code> model ($0.150 / 1M input tokens, $0.600 / 1M output tokens for Aug 2024). But you can change it to any other model available in OpenAI API. More powerful replacement is <code>gpt-4o</code> model ($5.00 / 1M input tokens, $15.00 / 1M output tokens for Aug 2024).</p>
<p>Also you can define other parameters for completion like:</p>
<ul>
<li><code>maxTokens</code> - most likely you don't want to waste tokens on longer completions, so default is 50 tokens.</li>
<li><code>temperature</code> - model temperature, default is 0.7. You can increase it to get more creative completions (but with risk of getting nonsense). Or decrease it to get more conservative completions.</li>
<li><code>debounceTime</code> - debounce time in milliseconds, default is 300. After typing each character, plugin waits for <code>debounceTime</code> milliseconds before sending request to LLM. If new character is typed during this time, then timer is reset. This is done to prevent sending too many requests to LLM.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="frontend-story">Frontend story<a class="hash-link" aria-label="Direct link to Frontend story" title="Direct link to Frontend story" href="https://adminforth.dev/blog/chatgpt-plugin/#frontend-story">​</a></h2>
<p>When we were working on plugin, we wanted to make it as user-friendly as possible.</p>
<p>Most frontend packages for completion have old-fashioned dropdowns, which are not very convenient to use.</p>
<p>We wanted to have something very similar to Copilot or Google doc. So we created our own package <a href="https://github.com/devforth/vue-suggestion-input" target="_blank" rel="noopener noreferrer">vue-suggestion-input</a>. It is also MIT and open-source so you can use it in your projects as well.</p>
<p>Under the hood vue-suggestion-input uses <a href="https://quilljs.com/" target="_blank" rel="noopener noreferrer">quill</a> editor. Quill is one of the WYSIWYG editors which have really good
API to work with DOM inside of editor. Basically all pieces of content in editor are represented as so called blots. And best thing - you can create your own custom blot. So we created our own blot which is responsible for rendering completion suggestion. Then you just "dance" around positioning of selection, suggestion and text modification, and thees things are easy-peasy with quill API.</p>]]></content>
        <author>
            <name>Ivan Borshcho</name>
            <uri>https://github.com/ivictbor</uri>
        </author>
        <category label="ChatGPT" term="ChatGPT"/>
        <category label="Plugin" term="Plugin"/>
    </entry>
</feed>